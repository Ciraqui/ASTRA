
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model produto
 * 
 */
export type produto = $Result.DefaultSelection<Prisma.$produtoPayload>
/**
 * Model cliente
 * 
 */
export type cliente = $Result.DefaultSelection<Prisma.$clientePayload>
/**
 * Model imagem
 * 
 */
export type imagem = $Result.DefaultSelection<Prisma.$imagemPayload>
/**
 * Model pedido
 * 
 */
export type pedido = $Result.DefaultSelection<Prisma.$pedidoPayload>
/**
 * Model personalizacao
 * 
 */
export type personalizacao = $Result.DefaultSelection<Prisma.$personalizacaoPayload>
/**
 * Model item_pedido
 * 
 */
export type item_pedido = $Result.DefaultSelection<Prisma.$item_pedidoPayload>
/**
 * Model usuario
 * 
 */
export type usuario = $Result.DefaultSelection<Prisma.$usuarioPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const permissao: {
  ADMIN: 'ADMIN',
  USUARIO: 'USUARIO',
  GESTOR: 'GESTOR'
};

export type permissao = (typeof permissao)[keyof typeof permissao]

}

export type permissao = $Enums.permissao

export const permissao: typeof $Enums.permissao

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Produtos
 * const produtos = await prisma.produto.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Produtos
   * const produtos = await prisma.produto.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.produto`: Exposes CRUD operations for the **produto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Produtos
    * const produtos = await prisma.produto.findMany()
    * ```
    */
  get produto(): Prisma.produtoDelegate<ExtArgs>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.clienteDelegate<ExtArgs>;

  /**
   * `prisma.imagem`: Exposes CRUD operations for the **imagem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imagems
    * const imagems = await prisma.imagem.findMany()
    * ```
    */
  get imagem(): Prisma.imagemDelegate<ExtArgs>;

  /**
   * `prisma.pedido`: Exposes CRUD operations for the **pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedidos
    * const pedidos = await prisma.pedido.findMany()
    * ```
    */
  get pedido(): Prisma.pedidoDelegate<ExtArgs>;

  /**
   * `prisma.personalizacao`: Exposes CRUD operations for the **personalizacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Personalizacaos
    * const personalizacaos = await prisma.personalizacao.findMany()
    * ```
    */
  get personalizacao(): Prisma.personalizacaoDelegate<ExtArgs>;

  /**
   * `prisma.item_pedido`: Exposes CRUD operations for the **item_pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Item_pedidos
    * const item_pedidos = await prisma.item_pedido.findMany()
    * ```
    */
  get item_pedido(): Prisma.item_pedidoDelegate<ExtArgs>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.usuarioDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.20.0
   * Query Engine version: 06fc58a368dc7be9fbbbe894adf8d445d208c284
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    produto: 'produto',
    cliente: 'cliente',
    imagem: 'imagem',
    pedido: 'pedido',
    personalizacao: 'personalizacao',
    item_pedido: 'item_pedido',
    usuario: 'usuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "produto" | "cliente" | "imagem" | "pedido" | "personalizacao" | "item_pedido" | "usuario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      produto: {
        payload: Prisma.$produtoPayload<ExtArgs>
        fields: Prisma.produtoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.produtoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.produtoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          findFirst: {
            args: Prisma.produtoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.produtoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          findMany: {
            args: Prisma.produtoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>[]
          }
          create: {
            args: Prisma.produtoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          createMany: {
            args: Prisma.produtoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.produtoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>[]
          }
          delete: {
            args: Prisma.produtoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          update: {
            args: Prisma.produtoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          deleteMany: {
            args: Prisma.produtoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.produtoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.produtoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          aggregate: {
            args: Prisma.ProdutoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduto>
          }
          groupBy: {
            args: Prisma.produtoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProdutoGroupByOutputType>[]
          }
          count: {
            args: Prisma.produtoCountArgs<ExtArgs>
            result: $Utils.Optional<ProdutoCountAggregateOutputType> | number
          }
        }
      }
      cliente: {
        payload: Prisma.$clientePayload<ExtArgs>
        fields: Prisma.clienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          findFirst: {
            args: Prisma.clienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          findMany: {
            args: Prisma.clienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>[]
          }
          create: {
            args: Prisma.clienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          createMany: {
            args: Prisma.clienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.clienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>[]
          }
          delete: {
            args: Prisma.clienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          update: {
            args: Prisma.clienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          deleteMany: {
            args: Prisma.clienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.clienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.clienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.clienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      imagem: {
        payload: Prisma.$imagemPayload<ExtArgs>
        fields: Prisma.imagemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imagemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imagemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>
          }
          findFirst: {
            args: Prisma.imagemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imagemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>
          }
          findMany: {
            args: Prisma.imagemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>[]
          }
          create: {
            args: Prisma.imagemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>
          }
          createMany: {
            args: Prisma.imagemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.imagemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>[]
          }
          delete: {
            args: Prisma.imagemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>
          }
          update: {
            args: Prisma.imagemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>
          }
          deleteMany: {
            args: Prisma.imagemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.imagemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.imagemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagemPayload>
          }
          aggregate: {
            args: Prisma.ImagemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImagem>
          }
          groupBy: {
            args: Prisma.imagemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImagemGroupByOutputType>[]
          }
          count: {
            args: Prisma.imagemCountArgs<ExtArgs>
            result: $Utils.Optional<ImagemCountAggregateOutputType> | number
          }
        }
      }
      pedido: {
        payload: Prisma.$pedidoPayload<ExtArgs>
        fields: Prisma.pedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>
          }
          findFirst: {
            args: Prisma.pedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>
          }
          findMany: {
            args: Prisma.pedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>[]
          }
          create: {
            args: Prisma.pedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>
          }
          createMany: {
            args: Prisma.pedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>[]
          }
          delete: {
            args: Prisma.pedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>
          }
          update: {
            args: Prisma.pedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>
          }
          deleteMany: {
            args: Prisma.pedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.pedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedidoPayload>
          }
          aggregate: {
            args: Prisma.PedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido>
          }
          groupBy: {
            args: Prisma.pedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.pedidoCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoCountAggregateOutputType> | number
          }
        }
      }
      personalizacao: {
        payload: Prisma.$personalizacaoPayload<ExtArgs>
        fields: Prisma.personalizacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.personalizacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.personalizacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>
          }
          findFirst: {
            args: Prisma.personalizacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.personalizacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>
          }
          findMany: {
            args: Prisma.personalizacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>[]
          }
          create: {
            args: Prisma.personalizacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>
          }
          createMany: {
            args: Prisma.personalizacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.personalizacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>[]
          }
          delete: {
            args: Prisma.personalizacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>
          }
          update: {
            args: Prisma.personalizacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>
          }
          deleteMany: {
            args: Prisma.personalizacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.personalizacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.personalizacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personalizacaoPayload>
          }
          aggregate: {
            args: Prisma.PersonalizacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePersonalizacao>
          }
          groupBy: {
            args: Prisma.personalizacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PersonalizacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.personalizacaoCountArgs<ExtArgs>
            result: $Utils.Optional<PersonalizacaoCountAggregateOutputType> | number
          }
        }
      }
      item_pedido: {
        payload: Prisma.$item_pedidoPayload<ExtArgs>
        fields: Prisma.item_pedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.item_pedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.item_pedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>
          }
          findFirst: {
            args: Prisma.item_pedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.item_pedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>
          }
          findMany: {
            args: Prisma.item_pedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>[]
          }
          create: {
            args: Prisma.item_pedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>
          }
          createMany: {
            args: Prisma.item_pedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.item_pedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>[]
          }
          delete: {
            args: Prisma.item_pedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>
          }
          update: {
            args: Prisma.item_pedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>
          }
          deleteMany: {
            args: Prisma.item_pedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.item_pedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.item_pedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$item_pedidoPayload>
          }
          aggregate: {
            args: Prisma.Item_pedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItem_pedido>
          }
          groupBy: {
            args: Prisma.item_pedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Item_pedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.item_pedidoCountArgs<ExtArgs>
            result: $Utils.Optional<Item_pedidoCountAggregateOutputType> | number
          }
        }
      }
      usuario: {
        payload: Prisma.$usuarioPayload<ExtArgs>
        fields: Prisma.usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findFirst: {
            args: Prisma.usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findMany: {
            args: Prisma.usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          create: {
            args: Prisma.usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          createMany: {
            args: Prisma.usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          delete: {
            args: Prisma.usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          update: {
            args: Prisma.usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          deleteMany: {
            args: Prisma.usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProdutoCountOutputType
   */

  export type ProdutoCountOutputType = {
    itens_pedido: number
  }

  export type ProdutoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | ProdutoCountOutputTypeCountItens_pedidoArgs
  }

  // Custom InputTypes
  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProdutoCountOutputType
     */
    select?: ProdutoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountItens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: item_pedidoWhereInput
  }


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    pedidos: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | ClienteCountOutputTypeCountPedidosArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountPedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedidoWhereInput
  }


  /**
   * Count Type ImagemCountOutputType
   */

  export type ImagemCountOutputType = {
    itens_pedido: number
  }

  export type ImagemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | ImagemCountOutputTypeCountItens_pedidoArgs
  }

  // Custom InputTypes
  /**
   * ImagemCountOutputType without action
   */
  export type ImagemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemCountOutputType
     */
    select?: ImagemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ImagemCountOutputType without action
   */
  export type ImagemCountOutputTypeCountItens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: item_pedidoWhereInput
  }


  /**
   * Count Type PedidoCountOutputType
   */

  export type PedidoCountOutputType = {
    itens_pedido: number
  }

  export type PedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | PedidoCountOutputTypeCountItens_pedidoArgs
  }

  // Custom InputTypes
  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCountOutputType
     */
    select?: PedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountItens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: item_pedidoWhereInput
  }


  /**
   * Count Type PersonalizacaoCountOutputType
   */

  export type PersonalizacaoCountOutputType = {
    itens_pedido: number
  }

  export type PersonalizacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | PersonalizacaoCountOutputTypeCountItens_pedidoArgs
  }

  // Custom InputTypes
  /**
   * PersonalizacaoCountOutputType without action
   */
  export type PersonalizacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PersonalizacaoCountOutputType
     */
    select?: PersonalizacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PersonalizacaoCountOutputType without action
   */
  export type PersonalizacaoCountOutputTypeCountItens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: item_pedidoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model produto
   */

  export type AggregateProduto = {
    _count: ProdutoCountAggregateOutputType | null
    _avg: ProdutoAvgAggregateOutputType | null
    _sum: ProdutoSumAggregateOutputType | null
    _min: ProdutoMinAggregateOutputType | null
    _max: ProdutoMaxAggregateOutputType | null
  }

  export type ProdutoAvgAggregateOutputType = {
    id_produto: number | null
    base_custo: number | null
    margem_lucro: number | null
  }

  export type ProdutoSumAggregateOutputType = {
    id_produto: number | null
    base_custo: number | null
    margem_lucro: number | null
  }

  export type ProdutoMinAggregateOutputType = {
    id_produto: number | null
    nome: string | null
    tipo: string | null
    base_custo: number | null
    margem_lucro: number | null
    material_principal: string | null
  }

  export type ProdutoMaxAggregateOutputType = {
    id_produto: number | null
    nome: string | null
    tipo: string | null
    base_custo: number | null
    margem_lucro: number | null
    material_principal: string | null
  }

  export type ProdutoCountAggregateOutputType = {
    id_produto: number
    nome: number
    tipo: number
    base_custo: number
    margem_lucro: number
    material_principal: number
    _all: number
  }


  export type ProdutoAvgAggregateInputType = {
    id_produto?: true
    base_custo?: true
    margem_lucro?: true
  }

  export type ProdutoSumAggregateInputType = {
    id_produto?: true
    base_custo?: true
    margem_lucro?: true
  }

  export type ProdutoMinAggregateInputType = {
    id_produto?: true
    nome?: true
    tipo?: true
    base_custo?: true
    margem_lucro?: true
    material_principal?: true
  }

  export type ProdutoMaxAggregateInputType = {
    id_produto?: true
    nome?: true
    tipo?: true
    base_custo?: true
    margem_lucro?: true
    material_principal?: true
  }

  export type ProdutoCountAggregateInputType = {
    id_produto?: true
    nome?: true
    tipo?: true
    base_custo?: true
    margem_lucro?: true
    material_principal?: true
    _all?: true
  }

  export type ProdutoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produto to aggregate.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned produtos
    **/
    _count?: true | ProdutoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProdutoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProdutoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProdutoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProdutoMaxAggregateInputType
  }

  export type GetProdutoAggregateType<T extends ProdutoAggregateArgs> = {
        [P in keyof T & keyof AggregateProduto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduto[P]>
      : GetScalarType<T[P], AggregateProduto[P]>
  }




  export type produtoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produtoWhereInput
    orderBy?: produtoOrderByWithAggregationInput | produtoOrderByWithAggregationInput[]
    by: ProdutoScalarFieldEnum[] | ProdutoScalarFieldEnum
    having?: produtoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProdutoCountAggregateInputType | true
    _avg?: ProdutoAvgAggregateInputType
    _sum?: ProdutoSumAggregateInputType
    _min?: ProdutoMinAggregateInputType
    _max?: ProdutoMaxAggregateInputType
  }

  export type ProdutoGroupByOutputType = {
    id_produto: number
    nome: string
    tipo: string
    base_custo: number
    margem_lucro: number
    material_principal: string
    _count: ProdutoCountAggregateOutputType | null
    _avg: ProdutoAvgAggregateOutputType | null
    _sum: ProdutoSumAggregateOutputType | null
    _min: ProdutoMinAggregateOutputType | null
    _max: ProdutoMaxAggregateOutputType | null
  }

  type GetProdutoGroupByPayload<T extends produtoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProdutoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProdutoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProdutoGroupByOutputType[P]>
            : GetScalarType<T[P], ProdutoGroupByOutputType[P]>
        }
      >
    >


  export type produtoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_produto?: boolean
    nome?: boolean
    tipo?: boolean
    base_custo?: boolean
    margem_lucro?: boolean
    material_principal?: boolean
    itens_pedido?: boolean | produto$itens_pedidoArgs<ExtArgs>
    _count?: boolean | ProdutoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produto"]>

  export type produtoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_produto?: boolean
    nome?: boolean
    tipo?: boolean
    base_custo?: boolean
    margem_lucro?: boolean
    material_principal?: boolean
  }, ExtArgs["result"]["produto"]>

  export type produtoSelectScalar = {
    id_produto?: boolean
    nome?: boolean
    tipo?: boolean
    base_custo?: boolean
    margem_lucro?: boolean
    material_principal?: boolean
  }

  export type produtoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | produto$itens_pedidoArgs<ExtArgs>
    _count?: boolean | ProdutoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type produtoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $produtoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "produto"
    objects: {
      itens_pedido: Prisma.$item_pedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_produto: number
      nome: string
      tipo: string
      base_custo: number
      margem_lucro: number
      material_principal: string
    }, ExtArgs["result"]["produto"]>
    composites: {}
  }

  type produtoGetPayload<S extends boolean | null | undefined | produtoDefaultArgs> = $Result.GetResult<Prisma.$produtoPayload, S>

  type produtoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<produtoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProdutoCountAggregateInputType | true
    }

  export interface produtoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['produto'], meta: { name: 'produto' } }
    /**
     * Find zero or one Produto that matches the filter.
     * @param {produtoFindUniqueArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends produtoFindUniqueArgs>(args: SelectSubset<T, produtoFindUniqueArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Produto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {produtoFindUniqueOrThrowArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends produtoFindUniqueOrThrowArgs>(args: SelectSubset<T, produtoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Produto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoFindFirstArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends produtoFindFirstArgs>(args?: SelectSubset<T, produtoFindFirstArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Produto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoFindFirstOrThrowArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends produtoFindFirstOrThrowArgs>(args?: SelectSubset<T, produtoFindFirstOrThrowArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Produtos
     * const produtos = await prisma.produto.findMany()
     * 
     * // Get first 10 Produtos
     * const produtos = await prisma.produto.findMany({ take: 10 })
     * 
     * // Only select the `id_produto`
     * const produtoWithId_produtoOnly = await prisma.produto.findMany({ select: { id_produto: true } })
     * 
     */
    findMany<T extends produtoFindManyArgs>(args?: SelectSubset<T, produtoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Produto.
     * @param {produtoCreateArgs} args - Arguments to create a Produto.
     * @example
     * // Create one Produto
     * const Produto = await prisma.produto.create({
     *   data: {
     *     // ... data to create a Produto
     *   }
     * })
     * 
     */
    create<T extends produtoCreateArgs>(args: SelectSubset<T, produtoCreateArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Produtos.
     * @param {produtoCreateManyArgs} args - Arguments to create many Produtos.
     * @example
     * // Create many Produtos
     * const produto = await prisma.produto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends produtoCreateManyArgs>(args?: SelectSubset<T, produtoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Produtos and returns the data saved in the database.
     * @param {produtoCreateManyAndReturnArgs} args - Arguments to create many Produtos.
     * @example
     * // Create many Produtos
     * const produto = await prisma.produto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Produtos and only return the `id_produto`
     * const produtoWithId_produtoOnly = await prisma.produto.createManyAndReturn({ 
     *   select: { id_produto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends produtoCreateManyAndReturnArgs>(args?: SelectSubset<T, produtoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Produto.
     * @param {produtoDeleteArgs} args - Arguments to delete one Produto.
     * @example
     * // Delete one Produto
     * const Produto = await prisma.produto.delete({
     *   where: {
     *     // ... filter to delete one Produto
     *   }
     * })
     * 
     */
    delete<T extends produtoDeleteArgs>(args: SelectSubset<T, produtoDeleteArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Produto.
     * @param {produtoUpdateArgs} args - Arguments to update one Produto.
     * @example
     * // Update one Produto
     * const produto = await prisma.produto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends produtoUpdateArgs>(args: SelectSubset<T, produtoUpdateArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Produtos.
     * @param {produtoDeleteManyArgs} args - Arguments to filter Produtos to delete.
     * @example
     * // Delete a few Produtos
     * const { count } = await prisma.produto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends produtoDeleteManyArgs>(args?: SelectSubset<T, produtoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Produtos
     * const produto = await prisma.produto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends produtoUpdateManyArgs>(args: SelectSubset<T, produtoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Produto.
     * @param {produtoUpsertArgs} args - Arguments to update or create a Produto.
     * @example
     * // Update or create a Produto
     * const produto = await prisma.produto.upsert({
     *   create: {
     *     // ... data to create a Produto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Produto we want to update
     *   }
     * })
     */
    upsert<T extends produtoUpsertArgs>(args: SelectSubset<T, produtoUpsertArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoCountArgs} args - Arguments to filter Produtos to count.
     * @example
     * // Count the number of Produtos
     * const count = await prisma.produto.count({
     *   where: {
     *     // ... the filter for the Produtos we want to count
     *   }
     * })
    **/
    count<T extends produtoCountArgs>(
      args?: Subset<T, produtoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProdutoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Produto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProdutoAggregateArgs>(args: Subset<T, ProdutoAggregateArgs>): Prisma.PrismaPromise<GetProdutoAggregateType<T>>

    /**
     * Group by Produto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends produtoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: produtoGroupByArgs['orderBy'] }
        : { orderBy?: produtoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, produtoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProdutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the produto model
   */
  readonly fields: produtoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for produto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__produtoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    itens_pedido<T extends produto$itens_pedidoArgs<ExtArgs> = {}>(args?: Subset<T, produto$itens_pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the produto model
   */ 
  interface produtoFieldRefs {
    readonly id_produto: FieldRef<"produto", 'Int'>
    readonly nome: FieldRef<"produto", 'String'>
    readonly tipo: FieldRef<"produto", 'String'>
    readonly base_custo: FieldRef<"produto", 'Float'>
    readonly margem_lucro: FieldRef<"produto", 'Float'>
    readonly material_principal: FieldRef<"produto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * produto findUnique
   */
  export type produtoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto findUniqueOrThrow
   */
  export type produtoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto findFirst
   */
  export type produtoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produtos.
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produtos.
     */
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * produto findFirstOrThrow
   */
  export type produtoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produtos.
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produtos.
     */
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * produto findMany
   */
  export type produtoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produtos to fetch.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing produtos.
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * produto create
   */
  export type produtoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * The data needed to create a produto.
     */
    data: XOR<produtoCreateInput, produtoUncheckedCreateInput>
  }

  /**
   * produto createMany
   */
  export type produtoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many produtos.
     */
    data: produtoCreateManyInput | produtoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * produto createManyAndReturn
   */
  export type produtoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many produtos.
     */
    data: produtoCreateManyInput | produtoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * produto update
   */
  export type produtoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * The data needed to update a produto.
     */
    data: XOR<produtoUpdateInput, produtoUncheckedUpdateInput>
    /**
     * Choose, which produto to update.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto updateMany
   */
  export type produtoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update produtos.
     */
    data: XOR<produtoUpdateManyMutationInput, produtoUncheckedUpdateManyInput>
    /**
     * Filter which produtos to update
     */
    where?: produtoWhereInput
  }

  /**
   * produto upsert
   */
  export type produtoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * The filter to search for the produto to update in case it exists.
     */
    where: produtoWhereUniqueInput
    /**
     * In case the produto found by the `where` argument doesn't exist, create a new produto with this data.
     */
    create: XOR<produtoCreateInput, produtoUncheckedCreateInput>
    /**
     * In case the produto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<produtoUpdateInput, produtoUncheckedUpdateInput>
  }

  /**
   * produto delete
   */
  export type produtoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter which produto to delete.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto deleteMany
   */
  export type produtoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produtos to delete
     */
    where?: produtoWhereInput
  }

  /**
   * produto.itens_pedido
   */
  export type produto$itens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    where?: item_pedidoWhereInput
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    cursor?: item_pedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * produto without action
   */
  export type produtoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
  }


  /**
   * Model cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id_cliente: number | null
    nome: string | null
    contato: string | null
    endereco: string | null
  }

  export type ClienteMaxAggregateOutputType = {
    id_cliente: number | null
    nome: string | null
    contato: string | null
    endereco: string | null
  }

  export type ClienteCountAggregateOutputType = {
    id_cliente: number
    nome: number
    contato: number
    endereco: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id_cliente?: true
  }

  export type ClienteSumAggregateInputType = {
    id_cliente?: true
  }

  export type ClienteMinAggregateInputType = {
    id_cliente?: true
    nome?: true
    contato?: true
    endereco?: true
  }

  export type ClienteMaxAggregateInputType = {
    id_cliente?: true
    nome?: true
    contato?: true
    endereco?: true
  }

  export type ClienteCountAggregateInputType = {
    id_cliente?: true
    nome?: true
    contato?: true
    endereco?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cliente to aggregate.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type clienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clienteWhereInput
    orderBy?: clienteOrderByWithAggregationInput | clienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: clienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id_cliente: number
    nome: string
    contato: string | null
    endereco: string | null
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends clienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type clienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nome?: boolean
    contato?: boolean
    endereco?: boolean
    pedidos?: boolean | cliente$pedidosArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type clienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nome?: boolean
    contato?: boolean
    endereco?: boolean
  }, ExtArgs["result"]["cliente"]>

  export type clienteSelectScalar = {
    id_cliente?: boolean
    nome?: boolean
    contato?: boolean
    endereco?: boolean
  }

  export type clienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | cliente$pedidosArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type clienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $clientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cliente"
    objects: {
      pedidos: Prisma.$pedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cliente: number
      nome: string
      contato: string | null
      endereco: string | null
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type clienteGetPayload<S extends boolean | null | undefined | clienteDefaultArgs> = $Result.GetResult<Prisma.$clientePayload, S>

  type clienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<clienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface clienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cliente'], meta: { name: 'cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {clienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clienteFindUniqueArgs>(args: SelectSubset<T, clienteFindUniqueArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {clienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clienteFindUniqueOrThrowArgs>(args: SelectSubset<T, clienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clienteFindFirstArgs>(args?: SelectSubset<T, clienteFindFirstArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clienteFindFirstOrThrowArgs>(args?: SelectSubset<T, clienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.findMany({ select: { id_cliente: true } })
     * 
     */
    findMany<T extends clienteFindManyArgs>(args?: SelectSubset<T, clienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cliente.
     * @param {clienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends clienteCreateArgs>(args: SelectSubset<T, clienteCreateArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clientes.
     * @param {clienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clienteCreateManyArgs>(args?: SelectSubset<T, clienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {clienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.createManyAndReturn({ 
     *   select: { id_cliente: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends clienteCreateManyAndReturnArgs>(args?: SelectSubset<T, clienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cliente.
     * @param {clienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends clienteDeleteArgs>(args: SelectSubset<T, clienteDeleteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cliente.
     * @param {clienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clienteUpdateArgs>(args: SelectSubset<T, clienteUpdateArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {clienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clienteDeleteManyArgs>(args?: SelectSubset<T, clienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clienteUpdateManyArgs>(args: SelectSubset<T, clienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {clienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends clienteUpsertArgs>(args: SelectSubset<T, clienteUpsertArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends clienteCountArgs>(
      args?: Subset<T, clienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clienteGroupByArgs['orderBy'] }
        : { orderBy?: clienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cliente model
   */
  readonly fields: clienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedidos<T extends cliente$pedidosArgs<ExtArgs> = {}>(args?: Subset<T, cliente$pedidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cliente model
   */ 
  interface clienteFieldRefs {
    readonly id_cliente: FieldRef<"cliente", 'Int'>
    readonly nome: FieldRef<"cliente", 'String'>
    readonly contato: FieldRef<"cliente", 'String'>
    readonly endereco: FieldRef<"cliente", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cliente findUnique
   */
  export type clienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente findUniqueOrThrow
   */
  export type clienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente findFirst
   */
  export type clienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente findFirstOrThrow
   */
  export type clienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente findMany
   */
  export type clienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente create
   */
  export type clienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * The data needed to create a cliente.
     */
    data: XOR<clienteCreateInput, clienteUncheckedCreateInput>
  }

  /**
   * cliente createMany
   */
  export type clienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clientes.
     */
    data: clienteCreateManyInput | clienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cliente createManyAndReturn
   */
  export type clienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many clientes.
     */
    data: clienteCreateManyInput | clienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cliente update
   */
  export type clienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * The data needed to update a cliente.
     */
    data: XOR<clienteUpdateInput, clienteUncheckedUpdateInput>
    /**
     * Choose, which cliente to update.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente updateMany
   */
  export type clienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clientes.
     */
    data: XOR<clienteUpdateManyMutationInput, clienteUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clienteWhereInput
  }

  /**
   * cliente upsert
   */
  export type clienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * The filter to search for the cliente to update in case it exists.
     */
    where: clienteWhereUniqueInput
    /**
     * In case the cliente found by the `where` argument doesn't exist, create a new cliente with this data.
     */
    create: XOR<clienteCreateInput, clienteUncheckedCreateInput>
    /**
     * In case the cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clienteUpdateInput, clienteUncheckedUpdateInput>
  }

  /**
   * cliente delete
   */
  export type clienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter which cliente to delete.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente deleteMany
   */
  export type clienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to delete
     */
    where?: clienteWhereInput
  }

  /**
   * cliente.pedidos
   */
  export type cliente$pedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    where?: pedidoWhereInput
    orderBy?: pedidoOrderByWithRelationInput | pedidoOrderByWithRelationInput[]
    cursor?: pedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * cliente without action
   */
  export type clienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
  }


  /**
   * Model imagem
   */

  export type AggregateImagem = {
    _count: ImagemCountAggregateOutputType | null
    _avg: ImagemAvgAggregateOutputType | null
    _sum: ImagemSumAggregateOutputType | null
    _min: ImagemMinAggregateOutputType | null
    _max: ImagemMaxAggregateOutputType | null
  }

  export type ImagemAvgAggregateOutputType = {
    id_imagem: number | null
    custo_adicional: number | null
  }

  export type ImagemSumAggregateOutputType = {
    id_imagem: number | null
    custo_adicional: number | null
  }

  export type ImagemMinAggregateOutputType = {
    id_imagem: number | null
    origem: string | null
    custo_adicional: number | null
  }

  export type ImagemMaxAggregateOutputType = {
    id_imagem: number | null
    origem: string | null
    custo_adicional: number | null
  }

  export type ImagemCountAggregateOutputType = {
    id_imagem: number
    origem: number
    custo_adicional: number
    _all: number
  }


  export type ImagemAvgAggregateInputType = {
    id_imagem?: true
    custo_adicional?: true
  }

  export type ImagemSumAggregateInputType = {
    id_imagem?: true
    custo_adicional?: true
  }

  export type ImagemMinAggregateInputType = {
    id_imagem?: true
    origem?: true
    custo_adicional?: true
  }

  export type ImagemMaxAggregateInputType = {
    id_imagem?: true
    origem?: true
    custo_adicional?: true
  }

  export type ImagemCountAggregateInputType = {
    id_imagem?: true
    origem?: true
    custo_adicional?: true
    _all?: true
  }

  export type ImagemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagem to aggregate.
     */
    where?: imagemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagems to fetch.
     */
    orderBy?: imagemOrderByWithRelationInput | imagemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imagemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imagems
    **/
    _count?: true | ImagemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImagemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImagemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagemMaxAggregateInputType
  }

  export type GetImagemAggregateType<T extends ImagemAggregateArgs> = {
        [P in keyof T & keyof AggregateImagem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagem[P]>
      : GetScalarType<T[P], AggregateImagem[P]>
  }




  export type imagemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagemWhereInput
    orderBy?: imagemOrderByWithAggregationInput | imagemOrderByWithAggregationInput[]
    by: ImagemScalarFieldEnum[] | ImagemScalarFieldEnum
    having?: imagemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagemCountAggregateInputType | true
    _avg?: ImagemAvgAggregateInputType
    _sum?: ImagemSumAggregateInputType
    _min?: ImagemMinAggregateInputType
    _max?: ImagemMaxAggregateInputType
  }

  export type ImagemGroupByOutputType = {
    id_imagem: number
    origem: string
    custo_adicional: number
    _count: ImagemCountAggregateOutputType | null
    _avg: ImagemAvgAggregateOutputType | null
    _sum: ImagemSumAggregateOutputType | null
    _min: ImagemMinAggregateOutputType | null
    _max: ImagemMaxAggregateOutputType | null
  }

  type GetImagemGroupByPayload<T extends imagemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagemGroupByOutputType[P]>
            : GetScalarType<T[P], ImagemGroupByOutputType[P]>
        }
      >
    >


  export type imagemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_imagem?: boolean
    origem?: boolean
    custo_adicional?: boolean
    itens_pedido?: boolean | imagem$itens_pedidoArgs<ExtArgs>
    _count?: boolean | ImagemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagem"]>

  export type imagemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_imagem?: boolean
    origem?: boolean
    custo_adicional?: boolean
  }, ExtArgs["result"]["imagem"]>

  export type imagemSelectScalar = {
    id_imagem?: boolean
    origem?: boolean
    custo_adicional?: boolean
  }

  export type imagemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | imagem$itens_pedidoArgs<ExtArgs>
    _count?: boolean | ImagemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type imagemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $imagemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imagem"
    objects: {
      itens_pedido: Prisma.$item_pedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_imagem: number
      origem: string
      custo_adicional: number
    }, ExtArgs["result"]["imagem"]>
    composites: {}
  }

  type imagemGetPayload<S extends boolean | null | undefined | imagemDefaultArgs> = $Result.GetResult<Prisma.$imagemPayload, S>

  type imagemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<imagemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ImagemCountAggregateInputType | true
    }

  export interface imagemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imagem'], meta: { name: 'imagem' } }
    /**
     * Find zero or one Imagem that matches the filter.
     * @param {imagemFindUniqueArgs} args - Arguments to find a Imagem
     * @example
     * // Get one Imagem
     * const imagem = await prisma.imagem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends imagemFindUniqueArgs>(args: SelectSubset<T, imagemFindUniqueArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Imagem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {imagemFindUniqueOrThrowArgs} args - Arguments to find a Imagem
     * @example
     * // Get one Imagem
     * const imagem = await prisma.imagem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends imagemFindUniqueOrThrowArgs>(args: SelectSubset<T, imagemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Imagem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagemFindFirstArgs} args - Arguments to find a Imagem
     * @example
     * // Get one Imagem
     * const imagem = await prisma.imagem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends imagemFindFirstArgs>(args?: SelectSubset<T, imagemFindFirstArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Imagem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagemFindFirstOrThrowArgs} args - Arguments to find a Imagem
     * @example
     * // Get one Imagem
     * const imagem = await prisma.imagem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends imagemFindFirstOrThrowArgs>(args?: SelectSubset<T, imagemFindFirstOrThrowArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Imagems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imagems
     * const imagems = await prisma.imagem.findMany()
     * 
     * // Get first 10 Imagems
     * const imagems = await prisma.imagem.findMany({ take: 10 })
     * 
     * // Only select the `id_imagem`
     * const imagemWithId_imagemOnly = await prisma.imagem.findMany({ select: { id_imagem: true } })
     * 
     */
    findMany<T extends imagemFindManyArgs>(args?: SelectSubset<T, imagemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Imagem.
     * @param {imagemCreateArgs} args - Arguments to create a Imagem.
     * @example
     * // Create one Imagem
     * const Imagem = await prisma.imagem.create({
     *   data: {
     *     // ... data to create a Imagem
     *   }
     * })
     * 
     */
    create<T extends imagemCreateArgs>(args: SelectSubset<T, imagemCreateArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Imagems.
     * @param {imagemCreateManyArgs} args - Arguments to create many Imagems.
     * @example
     * // Create many Imagems
     * const imagem = await prisma.imagem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends imagemCreateManyArgs>(args?: SelectSubset<T, imagemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Imagems and returns the data saved in the database.
     * @param {imagemCreateManyAndReturnArgs} args - Arguments to create many Imagems.
     * @example
     * // Create many Imagems
     * const imagem = await prisma.imagem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Imagems and only return the `id_imagem`
     * const imagemWithId_imagemOnly = await prisma.imagem.createManyAndReturn({ 
     *   select: { id_imagem: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends imagemCreateManyAndReturnArgs>(args?: SelectSubset<T, imagemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Imagem.
     * @param {imagemDeleteArgs} args - Arguments to delete one Imagem.
     * @example
     * // Delete one Imagem
     * const Imagem = await prisma.imagem.delete({
     *   where: {
     *     // ... filter to delete one Imagem
     *   }
     * })
     * 
     */
    delete<T extends imagemDeleteArgs>(args: SelectSubset<T, imagemDeleteArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Imagem.
     * @param {imagemUpdateArgs} args - Arguments to update one Imagem.
     * @example
     * // Update one Imagem
     * const imagem = await prisma.imagem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends imagemUpdateArgs>(args: SelectSubset<T, imagemUpdateArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Imagems.
     * @param {imagemDeleteManyArgs} args - Arguments to filter Imagems to delete.
     * @example
     * // Delete a few Imagems
     * const { count } = await prisma.imagem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends imagemDeleteManyArgs>(args?: SelectSubset<T, imagemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imagems
     * const imagem = await prisma.imagem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends imagemUpdateManyArgs>(args: SelectSubset<T, imagemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Imagem.
     * @param {imagemUpsertArgs} args - Arguments to update or create a Imagem.
     * @example
     * // Update or create a Imagem
     * const imagem = await prisma.imagem.upsert({
     *   create: {
     *     // ... data to create a Imagem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imagem we want to update
     *   }
     * })
     */
    upsert<T extends imagemUpsertArgs>(args: SelectSubset<T, imagemUpsertArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Imagems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagemCountArgs} args - Arguments to filter Imagems to count.
     * @example
     * // Count the number of Imagems
     * const count = await prisma.imagem.count({
     *   where: {
     *     // ... the filter for the Imagems we want to count
     *   }
     * })
    **/
    count<T extends imagemCountArgs>(
      args?: Subset<T, imagemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imagem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagemAggregateArgs>(args: Subset<T, ImagemAggregateArgs>): Prisma.PrismaPromise<GetImagemAggregateType<T>>

    /**
     * Group by Imagem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imagemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imagemGroupByArgs['orderBy'] }
        : { orderBy?: imagemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imagemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imagem model
   */
  readonly fields: imagemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imagem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imagemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    itens_pedido<T extends imagem$itens_pedidoArgs<ExtArgs> = {}>(args?: Subset<T, imagem$itens_pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the imagem model
   */ 
  interface imagemFieldRefs {
    readonly id_imagem: FieldRef<"imagem", 'Int'>
    readonly origem: FieldRef<"imagem", 'String'>
    readonly custo_adicional: FieldRef<"imagem", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * imagem findUnique
   */
  export type imagemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * Filter, which imagem to fetch.
     */
    where: imagemWhereUniqueInput
  }

  /**
   * imagem findUniqueOrThrow
   */
  export type imagemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * Filter, which imagem to fetch.
     */
    where: imagemWhereUniqueInput
  }

  /**
   * imagem findFirst
   */
  export type imagemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * Filter, which imagem to fetch.
     */
    where?: imagemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagems to fetch.
     */
    orderBy?: imagemOrderByWithRelationInput | imagemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagems.
     */
    cursor?: imagemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagems.
     */
    distinct?: ImagemScalarFieldEnum | ImagemScalarFieldEnum[]
  }

  /**
   * imagem findFirstOrThrow
   */
  export type imagemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * Filter, which imagem to fetch.
     */
    where?: imagemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagems to fetch.
     */
    orderBy?: imagemOrderByWithRelationInput | imagemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagems.
     */
    cursor?: imagemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagems.
     */
    distinct?: ImagemScalarFieldEnum | ImagemScalarFieldEnum[]
  }

  /**
   * imagem findMany
   */
  export type imagemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * Filter, which imagems to fetch.
     */
    where?: imagemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagems to fetch.
     */
    orderBy?: imagemOrderByWithRelationInput | imagemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imagems.
     */
    cursor?: imagemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagems.
     */
    skip?: number
    distinct?: ImagemScalarFieldEnum | ImagemScalarFieldEnum[]
  }

  /**
   * imagem create
   */
  export type imagemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * The data needed to create a imagem.
     */
    data: XOR<imagemCreateInput, imagemUncheckedCreateInput>
  }

  /**
   * imagem createMany
   */
  export type imagemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imagems.
     */
    data: imagemCreateManyInput | imagemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imagem createManyAndReturn
   */
  export type imagemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many imagems.
     */
    data: imagemCreateManyInput | imagemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * imagem update
   */
  export type imagemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * The data needed to update a imagem.
     */
    data: XOR<imagemUpdateInput, imagemUncheckedUpdateInput>
    /**
     * Choose, which imagem to update.
     */
    where: imagemWhereUniqueInput
  }

  /**
   * imagem updateMany
   */
  export type imagemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imagems.
     */
    data: XOR<imagemUpdateManyMutationInput, imagemUncheckedUpdateManyInput>
    /**
     * Filter which imagems to update
     */
    where?: imagemWhereInput
  }

  /**
   * imagem upsert
   */
  export type imagemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * The filter to search for the imagem to update in case it exists.
     */
    where: imagemWhereUniqueInput
    /**
     * In case the imagem found by the `where` argument doesn't exist, create a new imagem with this data.
     */
    create: XOR<imagemCreateInput, imagemUncheckedCreateInput>
    /**
     * In case the imagem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imagemUpdateInput, imagemUncheckedUpdateInput>
  }

  /**
   * imagem delete
   */
  export type imagemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    /**
     * Filter which imagem to delete.
     */
    where: imagemWhereUniqueInput
  }

  /**
   * imagem deleteMany
   */
  export type imagemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagems to delete
     */
    where?: imagemWhereInput
  }

  /**
   * imagem.itens_pedido
   */
  export type imagem$itens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    where?: item_pedidoWhereInput
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    cursor?: item_pedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * imagem without action
   */
  export type imagemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
  }


  /**
   * Model pedido
   */

  export type AggregatePedido = {
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  export type PedidoAvgAggregateOutputType = {
    id_pedido: number | null
    valor_total: number | null
    cliente_id: number | null
  }

  export type PedidoSumAggregateOutputType = {
    id_pedido: number | null
    valor_total: number | null
    cliente_id: number | null
  }

  export type PedidoMinAggregateOutputType = {
    id_pedido: number | null
    data: Date | null
    valor_total: number | null
    status: string | null
    cliente_id: number | null
  }

  export type PedidoMaxAggregateOutputType = {
    id_pedido: number | null
    data: Date | null
    valor_total: number | null
    status: string | null
    cliente_id: number | null
  }

  export type PedidoCountAggregateOutputType = {
    id_pedido: number
    data: number
    valor_total: number
    status: number
    cliente_id: number
    _all: number
  }


  export type PedidoAvgAggregateInputType = {
    id_pedido?: true
    valor_total?: true
    cliente_id?: true
  }

  export type PedidoSumAggregateInputType = {
    id_pedido?: true
    valor_total?: true
    cliente_id?: true
  }

  export type PedidoMinAggregateInputType = {
    id_pedido?: true
    data?: true
    valor_total?: true
    status?: true
    cliente_id?: true
  }

  export type PedidoMaxAggregateInputType = {
    id_pedido?: true
    data?: true
    valor_total?: true
    status?: true
    cliente_id?: true
  }

  export type PedidoCountAggregateInputType = {
    id_pedido?: true
    data?: true
    valor_total?: true
    status?: true
    cliente_id?: true
    _all?: true
  }

  export type PedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pedido to aggregate.
     */
    where?: pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedidos to fetch.
     */
    orderBy?: pedidoOrderByWithRelationInput | pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pedidos
    **/
    _count?: true | PedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoMaxAggregateInputType
  }

  export type GetPedidoAggregateType<T extends PedidoAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido[P]>
      : GetScalarType<T[P], AggregatePedido[P]>
  }




  export type pedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedidoWhereInput
    orderBy?: pedidoOrderByWithAggregationInput | pedidoOrderByWithAggregationInput[]
    by: PedidoScalarFieldEnum[] | PedidoScalarFieldEnum
    having?: pedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoCountAggregateInputType | true
    _avg?: PedidoAvgAggregateInputType
    _sum?: PedidoSumAggregateInputType
    _min?: PedidoMinAggregateInputType
    _max?: PedidoMaxAggregateInputType
  }

  export type PedidoGroupByOutputType = {
    id_pedido: number
    data: Date
    valor_total: number
    status: string
    cliente_id: number | null
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  type GetPedidoGroupByPayload<T extends pedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoGroupByOutputType[P]>
        }
      >
    >


  export type pedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    data?: boolean
    valor_total?: boolean
    status?: boolean
    cliente_id?: boolean
    cliente?: boolean | pedido$clienteArgs<ExtArgs>
    itens_pedido?: boolean | pedido$itens_pedidoArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type pedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    data?: boolean
    valor_total?: boolean
    status?: boolean
    cliente_id?: boolean
    cliente?: boolean | pedido$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type pedidoSelectScalar = {
    id_pedido?: boolean
    data?: boolean
    valor_total?: boolean
    status?: boolean
    cliente_id?: boolean
  }

  export type pedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | pedido$clienteArgs<ExtArgs>
    itens_pedido?: boolean | pedido$itens_pedidoArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | pedido$clienteArgs<ExtArgs>
  }

  export type $pedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pedido"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs> | null
      itens_pedido: Prisma.$item_pedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pedido: number
      data: Date
      valor_total: number
      status: string
      cliente_id: number | null
    }, ExtArgs["result"]["pedido"]>
    composites: {}
  }

  type pedidoGetPayload<S extends boolean | null | undefined | pedidoDefaultArgs> = $Result.GetResult<Prisma.$pedidoPayload, S>

  type pedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pedidoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PedidoCountAggregateInputType | true
    }

  export interface pedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pedido'], meta: { name: 'pedido' } }
    /**
     * Find zero or one Pedido that matches the filter.
     * @param {pedidoFindUniqueArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pedidoFindUniqueArgs>(args: SelectSubset<T, pedidoFindUniqueArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pedido that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {pedidoFindUniqueOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, pedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedidoFindFirstArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pedidoFindFirstArgs>(args?: SelectSubset<T, pedidoFindFirstArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedidoFindFirstOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, pedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedidos
     * const pedidos = await prisma.pedido.findMany()
     * 
     * // Get first 10 Pedidos
     * const pedidos = await prisma.pedido.findMany({ take: 10 })
     * 
     * // Only select the `id_pedido`
     * const pedidoWithId_pedidoOnly = await prisma.pedido.findMany({ select: { id_pedido: true } })
     * 
     */
    findMany<T extends pedidoFindManyArgs>(args?: SelectSubset<T, pedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pedido.
     * @param {pedidoCreateArgs} args - Arguments to create a Pedido.
     * @example
     * // Create one Pedido
     * const Pedido = await prisma.pedido.create({
     *   data: {
     *     // ... data to create a Pedido
     *   }
     * })
     * 
     */
    create<T extends pedidoCreateArgs>(args: SelectSubset<T, pedidoCreateArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pedidos.
     * @param {pedidoCreateManyArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pedidoCreateManyArgs>(args?: SelectSubset<T, pedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedidos and returns the data saved in the database.
     * @param {pedidoCreateManyAndReturnArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedidos and only return the `id_pedido`
     * const pedidoWithId_pedidoOnly = await prisma.pedido.createManyAndReturn({ 
     *   select: { id_pedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, pedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Pedido.
     * @param {pedidoDeleteArgs} args - Arguments to delete one Pedido.
     * @example
     * // Delete one Pedido
     * const Pedido = await prisma.pedido.delete({
     *   where: {
     *     // ... filter to delete one Pedido
     *   }
     * })
     * 
     */
    delete<T extends pedidoDeleteArgs>(args: SelectSubset<T, pedidoDeleteArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pedido.
     * @param {pedidoUpdateArgs} args - Arguments to update one Pedido.
     * @example
     * // Update one Pedido
     * const pedido = await prisma.pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pedidoUpdateArgs>(args: SelectSubset<T, pedidoUpdateArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pedidos.
     * @param {pedidoDeleteManyArgs} args - Arguments to filter Pedidos to delete.
     * @example
     * // Delete a few Pedidos
     * const { count } = await prisma.pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pedidoDeleteManyArgs>(args?: SelectSubset<T, pedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pedidoUpdateManyArgs>(args: SelectSubset<T, pedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pedido.
     * @param {pedidoUpsertArgs} args - Arguments to update or create a Pedido.
     * @example
     * // Update or create a Pedido
     * const pedido = await prisma.pedido.upsert({
     *   create: {
     *     // ... data to create a Pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido we want to update
     *   }
     * })
     */
    upsert<T extends pedidoUpsertArgs>(args: SelectSubset<T, pedidoUpsertArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedidoCountArgs} args - Arguments to filter Pedidos to count.
     * @example
     * // Count the number of Pedidos
     * const count = await prisma.pedido.count({
     *   where: {
     *     // ... the filter for the Pedidos we want to count
     *   }
     * })
    **/
    count<T extends pedidoCountArgs>(
      args?: Subset<T, pedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoAggregateArgs>(args: Subset<T, PedidoAggregateArgs>): Prisma.PrismaPromise<GetPedidoAggregateType<T>>

    /**
     * Group by Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pedidoGroupByArgs['orderBy'] }
        : { orderBy?: pedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pedido model
   */
  readonly fields: pedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends pedido$clienteArgs<ExtArgs> = {}>(args?: Subset<T, pedido$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    itens_pedido<T extends pedido$itens_pedidoArgs<ExtArgs> = {}>(args?: Subset<T, pedido$itens_pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pedido model
   */ 
  interface pedidoFieldRefs {
    readonly id_pedido: FieldRef<"pedido", 'Int'>
    readonly data: FieldRef<"pedido", 'DateTime'>
    readonly valor_total: FieldRef<"pedido", 'Float'>
    readonly status: FieldRef<"pedido", 'String'>
    readonly cliente_id: FieldRef<"pedido", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * pedido findUnique
   */
  export type pedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * Filter, which pedido to fetch.
     */
    where: pedidoWhereUniqueInput
  }

  /**
   * pedido findUniqueOrThrow
   */
  export type pedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * Filter, which pedido to fetch.
     */
    where: pedidoWhereUniqueInput
  }

  /**
   * pedido findFirst
   */
  export type pedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * Filter, which pedido to fetch.
     */
    where?: pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedidos to fetch.
     */
    orderBy?: pedidoOrderByWithRelationInput | pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pedidos.
     */
    cursor?: pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * pedido findFirstOrThrow
   */
  export type pedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * Filter, which pedido to fetch.
     */
    where?: pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedidos to fetch.
     */
    orderBy?: pedidoOrderByWithRelationInput | pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pedidos.
     */
    cursor?: pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * pedido findMany
   */
  export type pedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * Filter, which pedidos to fetch.
     */
    where?: pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedidos to fetch.
     */
    orderBy?: pedidoOrderByWithRelationInput | pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pedidos.
     */
    cursor?: pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedidos.
     */
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * pedido create
   */
  export type pedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a pedido.
     */
    data: XOR<pedidoCreateInput, pedidoUncheckedCreateInput>
  }

  /**
   * pedido createMany
   */
  export type pedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pedidos.
     */
    data: pedidoCreateManyInput | pedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pedido createManyAndReturn
   */
  export type pedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many pedidos.
     */
    data: pedidoCreateManyInput | pedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pedido update
   */
  export type pedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a pedido.
     */
    data: XOR<pedidoUpdateInput, pedidoUncheckedUpdateInput>
    /**
     * Choose, which pedido to update.
     */
    where: pedidoWhereUniqueInput
  }

  /**
   * pedido updateMany
   */
  export type pedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pedidos.
     */
    data: XOR<pedidoUpdateManyMutationInput, pedidoUncheckedUpdateManyInput>
    /**
     * Filter which pedidos to update
     */
    where?: pedidoWhereInput
  }

  /**
   * pedido upsert
   */
  export type pedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the pedido to update in case it exists.
     */
    where: pedidoWhereUniqueInput
    /**
     * In case the pedido found by the `where` argument doesn't exist, create a new pedido with this data.
     */
    create: XOR<pedidoCreateInput, pedidoUncheckedCreateInput>
    /**
     * In case the pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pedidoUpdateInput, pedidoUncheckedUpdateInput>
  }

  /**
   * pedido delete
   */
  export type pedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
    /**
     * Filter which pedido to delete.
     */
    where: pedidoWhereUniqueInput
  }

  /**
   * pedido deleteMany
   */
  export type pedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pedidos to delete
     */
    where?: pedidoWhereInput
  }

  /**
   * pedido.cliente
   */
  export type pedido$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * pedido.itens_pedido
   */
  export type pedido$itens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    where?: item_pedidoWhereInput
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    cursor?: item_pedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * pedido without action
   */
  export type pedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido
     */
    select?: pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedidoInclude<ExtArgs> | null
  }


  /**
   * Model personalizacao
   */

  export type AggregatePersonalizacao = {
    _count: PersonalizacaoCountAggregateOutputType | null
    _avg: PersonalizacaoAvgAggregateOutputType | null
    _sum: PersonalizacaoSumAggregateOutputType | null
    _min: PersonalizacaoMinAggregateOutputType | null
    _max: PersonalizacaoMaxAggregateOutputType | null
  }

  export type PersonalizacaoAvgAggregateOutputType = {
    id_personalizacao: number | null
    valor_adicional: number | null
  }

  export type PersonalizacaoSumAggregateOutputType = {
    id_personalizacao: number | null
    valor_adicional: number | null
  }

  export type PersonalizacaoMinAggregateOutputType = {
    id_personalizacao: number | null
    tipo: string | null
    valor_adicional: number | null
    detalhes: string | null
  }

  export type PersonalizacaoMaxAggregateOutputType = {
    id_personalizacao: number | null
    tipo: string | null
    valor_adicional: number | null
    detalhes: string | null
  }

  export type PersonalizacaoCountAggregateOutputType = {
    id_personalizacao: number
    tipo: number
    valor_adicional: number
    detalhes: number
    _all: number
  }


  export type PersonalizacaoAvgAggregateInputType = {
    id_personalizacao?: true
    valor_adicional?: true
  }

  export type PersonalizacaoSumAggregateInputType = {
    id_personalizacao?: true
    valor_adicional?: true
  }

  export type PersonalizacaoMinAggregateInputType = {
    id_personalizacao?: true
    tipo?: true
    valor_adicional?: true
    detalhes?: true
  }

  export type PersonalizacaoMaxAggregateInputType = {
    id_personalizacao?: true
    tipo?: true
    valor_adicional?: true
    detalhes?: true
  }

  export type PersonalizacaoCountAggregateInputType = {
    id_personalizacao?: true
    tipo?: true
    valor_adicional?: true
    detalhes?: true
    _all?: true
  }

  export type PersonalizacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which personalizacao to aggregate.
     */
    where?: personalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personalizacaos to fetch.
     */
    orderBy?: personalizacaoOrderByWithRelationInput | personalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: personalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personalizacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned personalizacaos
    **/
    _count?: true | PersonalizacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PersonalizacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PersonalizacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PersonalizacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PersonalizacaoMaxAggregateInputType
  }

  export type GetPersonalizacaoAggregateType<T extends PersonalizacaoAggregateArgs> = {
        [P in keyof T & keyof AggregatePersonalizacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersonalizacao[P]>
      : GetScalarType<T[P], AggregatePersonalizacao[P]>
  }




  export type personalizacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: personalizacaoWhereInput
    orderBy?: personalizacaoOrderByWithAggregationInput | personalizacaoOrderByWithAggregationInput[]
    by: PersonalizacaoScalarFieldEnum[] | PersonalizacaoScalarFieldEnum
    having?: personalizacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PersonalizacaoCountAggregateInputType | true
    _avg?: PersonalizacaoAvgAggregateInputType
    _sum?: PersonalizacaoSumAggregateInputType
    _min?: PersonalizacaoMinAggregateInputType
    _max?: PersonalizacaoMaxAggregateInputType
  }

  export type PersonalizacaoGroupByOutputType = {
    id_personalizacao: number
    tipo: string
    valor_adicional: number
    detalhes: string | null
    _count: PersonalizacaoCountAggregateOutputType | null
    _avg: PersonalizacaoAvgAggregateOutputType | null
    _sum: PersonalizacaoSumAggregateOutputType | null
    _min: PersonalizacaoMinAggregateOutputType | null
    _max: PersonalizacaoMaxAggregateOutputType | null
  }

  type GetPersonalizacaoGroupByPayload<T extends personalizacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PersonalizacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PersonalizacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PersonalizacaoGroupByOutputType[P]>
            : GetScalarType<T[P], PersonalizacaoGroupByOutputType[P]>
        }
      >
    >


  export type personalizacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_personalizacao?: boolean
    tipo?: boolean
    valor_adicional?: boolean
    detalhes?: boolean
    itens_pedido?: boolean | personalizacao$itens_pedidoArgs<ExtArgs>
    _count?: boolean | PersonalizacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["personalizacao"]>

  export type personalizacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_personalizacao?: boolean
    tipo?: boolean
    valor_adicional?: boolean
    detalhes?: boolean
  }, ExtArgs["result"]["personalizacao"]>

  export type personalizacaoSelectScalar = {
    id_personalizacao?: boolean
    tipo?: boolean
    valor_adicional?: boolean
    detalhes?: boolean
  }

  export type personalizacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens_pedido?: boolean | personalizacao$itens_pedidoArgs<ExtArgs>
    _count?: boolean | PersonalizacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type personalizacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $personalizacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "personalizacao"
    objects: {
      itens_pedido: Prisma.$item_pedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_personalizacao: number
      tipo: string
      valor_adicional: number
      detalhes: string | null
    }, ExtArgs["result"]["personalizacao"]>
    composites: {}
  }

  type personalizacaoGetPayload<S extends boolean | null | undefined | personalizacaoDefaultArgs> = $Result.GetResult<Prisma.$personalizacaoPayload, S>

  type personalizacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<personalizacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PersonalizacaoCountAggregateInputType | true
    }

  export interface personalizacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['personalizacao'], meta: { name: 'personalizacao' } }
    /**
     * Find zero or one Personalizacao that matches the filter.
     * @param {personalizacaoFindUniqueArgs} args - Arguments to find a Personalizacao
     * @example
     * // Get one Personalizacao
     * const personalizacao = await prisma.personalizacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends personalizacaoFindUniqueArgs>(args: SelectSubset<T, personalizacaoFindUniqueArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Personalizacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {personalizacaoFindUniqueOrThrowArgs} args - Arguments to find a Personalizacao
     * @example
     * // Get one Personalizacao
     * const personalizacao = await prisma.personalizacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends personalizacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, personalizacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Personalizacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personalizacaoFindFirstArgs} args - Arguments to find a Personalizacao
     * @example
     * // Get one Personalizacao
     * const personalizacao = await prisma.personalizacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends personalizacaoFindFirstArgs>(args?: SelectSubset<T, personalizacaoFindFirstArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Personalizacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personalizacaoFindFirstOrThrowArgs} args - Arguments to find a Personalizacao
     * @example
     * // Get one Personalizacao
     * const personalizacao = await prisma.personalizacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends personalizacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, personalizacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Personalizacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personalizacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Personalizacaos
     * const personalizacaos = await prisma.personalizacao.findMany()
     * 
     * // Get first 10 Personalizacaos
     * const personalizacaos = await prisma.personalizacao.findMany({ take: 10 })
     * 
     * // Only select the `id_personalizacao`
     * const personalizacaoWithId_personalizacaoOnly = await prisma.personalizacao.findMany({ select: { id_personalizacao: true } })
     * 
     */
    findMany<T extends personalizacaoFindManyArgs>(args?: SelectSubset<T, personalizacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Personalizacao.
     * @param {personalizacaoCreateArgs} args - Arguments to create a Personalizacao.
     * @example
     * // Create one Personalizacao
     * const Personalizacao = await prisma.personalizacao.create({
     *   data: {
     *     // ... data to create a Personalizacao
     *   }
     * })
     * 
     */
    create<T extends personalizacaoCreateArgs>(args: SelectSubset<T, personalizacaoCreateArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Personalizacaos.
     * @param {personalizacaoCreateManyArgs} args - Arguments to create many Personalizacaos.
     * @example
     * // Create many Personalizacaos
     * const personalizacao = await prisma.personalizacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends personalizacaoCreateManyArgs>(args?: SelectSubset<T, personalizacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Personalizacaos and returns the data saved in the database.
     * @param {personalizacaoCreateManyAndReturnArgs} args - Arguments to create many Personalizacaos.
     * @example
     * // Create many Personalizacaos
     * const personalizacao = await prisma.personalizacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Personalizacaos and only return the `id_personalizacao`
     * const personalizacaoWithId_personalizacaoOnly = await prisma.personalizacao.createManyAndReturn({ 
     *   select: { id_personalizacao: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends personalizacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, personalizacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Personalizacao.
     * @param {personalizacaoDeleteArgs} args - Arguments to delete one Personalizacao.
     * @example
     * // Delete one Personalizacao
     * const Personalizacao = await prisma.personalizacao.delete({
     *   where: {
     *     // ... filter to delete one Personalizacao
     *   }
     * })
     * 
     */
    delete<T extends personalizacaoDeleteArgs>(args: SelectSubset<T, personalizacaoDeleteArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Personalizacao.
     * @param {personalizacaoUpdateArgs} args - Arguments to update one Personalizacao.
     * @example
     * // Update one Personalizacao
     * const personalizacao = await prisma.personalizacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends personalizacaoUpdateArgs>(args: SelectSubset<T, personalizacaoUpdateArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Personalizacaos.
     * @param {personalizacaoDeleteManyArgs} args - Arguments to filter Personalizacaos to delete.
     * @example
     * // Delete a few Personalizacaos
     * const { count } = await prisma.personalizacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends personalizacaoDeleteManyArgs>(args?: SelectSubset<T, personalizacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personalizacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personalizacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Personalizacaos
     * const personalizacao = await prisma.personalizacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends personalizacaoUpdateManyArgs>(args: SelectSubset<T, personalizacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Personalizacao.
     * @param {personalizacaoUpsertArgs} args - Arguments to update or create a Personalizacao.
     * @example
     * // Update or create a Personalizacao
     * const personalizacao = await prisma.personalizacao.upsert({
     *   create: {
     *     // ... data to create a Personalizacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Personalizacao we want to update
     *   }
     * })
     */
    upsert<T extends personalizacaoUpsertArgs>(args: SelectSubset<T, personalizacaoUpsertArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Personalizacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personalizacaoCountArgs} args - Arguments to filter Personalizacaos to count.
     * @example
     * // Count the number of Personalizacaos
     * const count = await prisma.personalizacao.count({
     *   where: {
     *     // ... the filter for the Personalizacaos we want to count
     *   }
     * })
    **/
    count<T extends personalizacaoCountArgs>(
      args?: Subset<T, personalizacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PersonalizacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Personalizacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonalizacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PersonalizacaoAggregateArgs>(args: Subset<T, PersonalizacaoAggregateArgs>): Prisma.PrismaPromise<GetPersonalizacaoAggregateType<T>>

    /**
     * Group by Personalizacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personalizacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends personalizacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: personalizacaoGroupByArgs['orderBy'] }
        : { orderBy?: personalizacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, personalizacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonalizacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the personalizacao model
   */
  readonly fields: personalizacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for personalizacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__personalizacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    itens_pedido<T extends personalizacao$itens_pedidoArgs<ExtArgs> = {}>(args?: Subset<T, personalizacao$itens_pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the personalizacao model
   */ 
  interface personalizacaoFieldRefs {
    readonly id_personalizacao: FieldRef<"personalizacao", 'Int'>
    readonly tipo: FieldRef<"personalizacao", 'String'>
    readonly valor_adicional: FieldRef<"personalizacao", 'Float'>
    readonly detalhes: FieldRef<"personalizacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * personalizacao findUnique
   */
  export type personalizacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which personalizacao to fetch.
     */
    where: personalizacaoWhereUniqueInput
  }

  /**
   * personalizacao findUniqueOrThrow
   */
  export type personalizacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which personalizacao to fetch.
     */
    where: personalizacaoWhereUniqueInput
  }

  /**
   * personalizacao findFirst
   */
  export type personalizacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which personalizacao to fetch.
     */
    where?: personalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personalizacaos to fetch.
     */
    orderBy?: personalizacaoOrderByWithRelationInput | personalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personalizacaos.
     */
    cursor?: personalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personalizacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personalizacaos.
     */
    distinct?: PersonalizacaoScalarFieldEnum | PersonalizacaoScalarFieldEnum[]
  }

  /**
   * personalizacao findFirstOrThrow
   */
  export type personalizacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which personalizacao to fetch.
     */
    where?: personalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personalizacaos to fetch.
     */
    orderBy?: personalizacaoOrderByWithRelationInput | personalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personalizacaos.
     */
    cursor?: personalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personalizacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personalizacaos.
     */
    distinct?: PersonalizacaoScalarFieldEnum | PersonalizacaoScalarFieldEnum[]
  }

  /**
   * personalizacao findMany
   */
  export type personalizacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which personalizacaos to fetch.
     */
    where?: personalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personalizacaos to fetch.
     */
    orderBy?: personalizacaoOrderByWithRelationInput | personalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing personalizacaos.
     */
    cursor?: personalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personalizacaos.
     */
    skip?: number
    distinct?: PersonalizacaoScalarFieldEnum | PersonalizacaoScalarFieldEnum[]
  }

  /**
   * personalizacao create
   */
  export type personalizacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a personalizacao.
     */
    data: XOR<personalizacaoCreateInput, personalizacaoUncheckedCreateInput>
  }

  /**
   * personalizacao createMany
   */
  export type personalizacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many personalizacaos.
     */
    data: personalizacaoCreateManyInput | personalizacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * personalizacao createManyAndReturn
   */
  export type personalizacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many personalizacaos.
     */
    data: personalizacaoCreateManyInput | personalizacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * personalizacao update
   */
  export type personalizacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a personalizacao.
     */
    data: XOR<personalizacaoUpdateInput, personalizacaoUncheckedUpdateInput>
    /**
     * Choose, which personalizacao to update.
     */
    where: personalizacaoWhereUniqueInput
  }

  /**
   * personalizacao updateMany
   */
  export type personalizacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update personalizacaos.
     */
    data: XOR<personalizacaoUpdateManyMutationInput, personalizacaoUncheckedUpdateManyInput>
    /**
     * Filter which personalizacaos to update
     */
    where?: personalizacaoWhereInput
  }

  /**
   * personalizacao upsert
   */
  export type personalizacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the personalizacao to update in case it exists.
     */
    where: personalizacaoWhereUniqueInput
    /**
     * In case the personalizacao found by the `where` argument doesn't exist, create a new personalizacao with this data.
     */
    create: XOR<personalizacaoCreateInput, personalizacaoUncheckedCreateInput>
    /**
     * In case the personalizacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<personalizacaoUpdateInput, personalizacaoUncheckedUpdateInput>
  }

  /**
   * personalizacao delete
   */
  export type personalizacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    /**
     * Filter which personalizacao to delete.
     */
    where: personalizacaoWhereUniqueInput
  }

  /**
   * personalizacao deleteMany
   */
  export type personalizacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which personalizacaos to delete
     */
    where?: personalizacaoWhereInput
  }

  /**
   * personalizacao.itens_pedido
   */
  export type personalizacao$itens_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    where?: item_pedidoWhereInput
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    cursor?: item_pedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * personalizacao without action
   */
  export type personalizacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
  }


  /**
   * Model item_pedido
   */

  export type AggregateItem_pedido = {
    _count: Item_pedidoCountAggregateOutputType | null
    _avg: Item_pedidoAvgAggregateOutputType | null
    _sum: Item_pedidoSumAggregateOutputType | null
    _min: Item_pedidoMinAggregateOutputType | null
    _max: Item_pedidoMaxAggregateOutputType | null
  }

  export type Item_pedidoAvgAggregateOutputType = {
    id_item: number | null
    quantidade: number | null
    preco_total: number | null
    pedido_id: number | null
    produto_id: number | null
    imagem_id: number | null
    personalizacao_id: number | null
  }

  export type Item_pedidoSumAggregateOutputType = {
    id_item: number | null
    quantidade: number | null
    preco_total: number | null
    pedido_id: number | null
    produto_id: number | null
    imagem_id: number | null
    personalizacao_id: number | null
  }

  export type Item_pedidoMinAggregateOutputType = {
    id_item: number | null
    quantidade: number | null
    preco_total: number | null
    pedido_id: number | null
    produto_id: number | null
    imagem_id: number | null
    personalizacao_id: number | null
  }

  export type Item_pedidoMaxAggregateOutputType = {
    id_item: number | null
    quantidade: number | null
    preco_total: number | null
    pedido_id: number | null
    produto_id: number | null
    imagem_id: number | null
    personalizacao_id: number | null
  }

  export type Item_pedidoCountAggregateOutputType = {
    id_item: number
    quantidade: number
    preco_total: number
    pedido_id: number
    produto_id: number
    imagem_id: number
    personalizacao_id: number
    _all: number
  }


  export type Item_pedidoAvgAggregateInputType = {
    id_item?: true
    quantidade?: true
    preco_total?: true
    pedido_id?: true
    produto_id?: true
    imagem_id?: true
    personalizacao_id?: true
  }

  export type Item_pedidoSumAggregateInputType = {
    id_item?: true
    quantidade?: true
    preco_total?: true
    pedido_id?: true
    produto_id?: true
    imagem_id?: true
    personalizacao_id?: true
  }

  export type Item_pedidoMinAggregateInputType = {
    id_item?: true
    quantidade?: true
    preco_total?: true
    pedido_id?: true
    produto_id?: true
    imagem_id?: true
    personalizacao_id?: true
  }

  export type Item_pedidoMaxAggregateInputType = {
    id_item?: true
    quantidade?: true
    preco_total?: true
    pedido_id?: true
    produto_id?: true
    imagem_id?: true
    personalizacao_id?: true
  }

  export type Item_pedidoCountAggregateInputType = {
    id_item?: true
    quantidade?: true
    preco_total?: true
    pedido_id?: true
    produto_id?: true
    imagem_id?: true
    personalizacao_id?: true
    _all?: true
  }

  export type Item_pedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which item_pedido to aggregate.
     */
    where?: item_pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of item_pedidos to fetch.
     */
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: item_pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` item_pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` item_pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned item_pedidos
    **/
    _count?: true | Item_pedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Item_pedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Item_pedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Item_pedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Item_pedidoMaxAggregateInputType
  }

  export type GetItem_pedidoAggregateType<T extends Item_pedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateItem_pedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItem_pedido[P]>
      : GetScalarType<T[P], AggregateItem_pedido[P]>
  }




  export type item_pedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: item_pedidoWhereInput
    orderBy?: item_pedidoOrderByWithAggregationInput | item_pedidoOrderByWithAggregationInput[]
    by: Item_pedidoScalarFieldEnum[] | Item_pedidoScalarFieldEnum
    having?: item_pedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Item_pedidoCountAggregateInputType | true
    _avg?: Item_pedidoAvgAggregateInputType
    _sum?: Item_pedidoSumAggregateInputType
    _min?: Item_pedidoMinAggregateInputType
    _max?: Item_pedidoMaxAggregateInputType
  }

  export type Item_pedidoGroupByOutputType = {
    id_item: number
    quantidade: number
    preco_total: number
    pedido_id: number
    produto_id: number
    imagem_id: number | null
    personalizacao_id: number | null
    _count: Item_pedidoCountAggregateOutputType | null
    _avg: Item_pedidoAvgAggregateOutputType | null
    _sum: Item_pedidoSumAggregateOutputType | null
    _min: Item_pedidoMinAggregateOutputType | null
    _max: Item_pedidoMaxAggregateOutputType | null
  }

  type GetItem_pedidoGroupByPayload<T extends item_pedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Item_pedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Item_pedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Item_pedidoGroupByOutputType[P]>
            : GetScalarType<T[P], Item_pedidoGroupByOutputType[P]>
        }
      >
    >


  export type item_pedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_item?: boolean
    quantidade?: boolean
    preco_total?: boolean
    pedido_id?: boolean
    produto_id?: boolean
    imagem_id?: boolean
    personalizacao_id?: boolean
    pedido?: boolean | pedidoDefaultArgs<ExtArgs>
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    imagem?: boolean | item_pedido$imagemArgs<ExtArgs>
    personalizacao?: boolean | item_pedido$personalizacaoArgs<ExtArgs>
  }, ExtArgs["result"]["item_pedido"]>

  export type item_pedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_item?: boolean
    quantidade?: boolean
    preco_total?: boolean
    pedido_id?: boolean
    produto_id?: boolean
    imagem_id?: boolean
    personalizacao_id?: boolean
    pedido?: boolean | pedidoDefaultArgs<ExtArgs>
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    imagem?: boolean | item_pedido$imagemArgs<ExtArgs>
    personalizacao?: boolean | item_pedido$personalizacaoArgs<ExtArgs>
  }, ExtArgs["result"]["item_pedido"]>

  export type item_pedidoSelectScalar = {
    id_item?: boolean
    quantidade?: boolean
    preco_total?: boolean
    pedido_id?: boolean
    produto_id?: boolean
    imagem_id?: boolean
    personalizacao_id?: boolean
  }

  export type item_pedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | pedidoDefaultArgs<ExtArgs>
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    imagem?: boolean | item_pedido$imagemArgs<ExtArgs>
    personalizacao?: boolean | item_pedido$personalizacaoArgs<ExtArgs>
  }
  export type item_pedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | pedidoDefaultArgs<ExtArgs>
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    imagem?: boolean | item_pedido$imagemArgs<ExtArgs>
    personalizacao?: boolean | item_pedido$personalizacaoArgs<ExtArgs>
  }

  export type $item_pedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "item_pedido"
    objects: {
      pedido: Prisma.$pedidoPayload<ExtArgs>
      produto: Prisma.$produtoPayload<ExtArgs>
      imagem: Prisma.$imagemPayload<ExtArgs> | null
      personalizacao: Prisma.$personalizacaoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_item: number
      quantidade: number
      preco_total: number
      pedido_id: number
      produto_id: number
      imagem_id: number | null
      personalizacao_id: number | null
    }, ExtArgs["result"]["item_pedido"]>
    composites: {}
  }

  type item_pedidoGetPayload<S extends boolean | null | undefined | item_pedidoDefaultArgs> = $Result.GetResult<Prisma.$item_pedidoPayload, S>

  type item_pedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<item_pedidoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Item_pedidoCountAggregateInputType | true
    }

  export interface item_pedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['item_pedido'], meta: { name: 'item_pedido' } }
    /**
     * Find zero or one Item_pedido that matches the filter.
     * @param {item_pedidoFindUniqueArgs} args - Arguments to find a Item_pedido
     * @example
     * // Get one Item_pedido
     * const item_pedido = await prisma.item_pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends item_pedidoFindUniqueArgs>(args: SelectSubset<T, item_pedidoFindUniqueArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Item_pedido that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {item_pedidoFindUniqueOrThrowArgs} args - Arguments to find a Item_pedido
     * @example
     * // Get one Item_pedido
     * const item_pedido = await prisma.item_pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends item_pedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, item_pedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Item_pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {item_pedidoFindFirstArgs} args - Arguments to find a Item_pedido
     * @example
     * // Get one Item_pedido
     * const item_pedido = await prisma.item_pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends item_pedidoFindFirstArgs>(args?: SelectSubset<T, item_pedidoFindFirstArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Item_pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {item_pedidoFindFirstOrThrowArgs} args - Arguments to find a Item_pedido
     * @example
     * // Get one Item_pedido
     * const item_pedido = await prisma.item_pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends item_pedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, item_pedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Item_pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {item_pedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Item_pedidos
     * const item_pedidos = await prisma.item_pedido.findMany()
     * 
     * // Get first 10 Item_pedidos
     * const item_pedidos = await prisma.item_pedido.findMany({ take: 10 })
     * 
     * // Only select the `id_item`
     * const item_pedidoWithId_itemOnly = await prisma.item_pedido.findMany({ select: { id_item: true } })
     * 
     */
    findMany<T extends item_pedidoFindManyArgs>(args?: SelectSubset<T, item_pedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Item_pedido.
     * @param {item_pedidoCreateArgs} args - Arguments to create a Item_pedido.
     * @example
     * // Create one Item_pedido
     * const Item_pedido = await prisma.item_pedido.create({
     *   data: {
     *     // ... data to create a Item_pedido
     *   }
     * })
     * 
     */
    create<T extends item_pedidoCreateArgs>(args: SelectSubset<T, item_pedidoCreateArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Item_pedidos.
     * @param {item_pedidoCreateManyArgs} args - Arguments to create many Item_pedidos.
     * @example
     * // Create many Item_pedidos
     * const item_pedido = await prisma.item_pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends item_pedidoCreateManyArgs>(args?: SelectSubset<T, item_pedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Item_pedidos and returns the data saved in the database.
     * @param {item_pedidoCreateManyAndReturnArgs} args - Arguments to create many Item_pedidos.
     * @example
     * // Create many Item_pedidos
     * const item_pedido = await prisma.item_pedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Item_pedidos and only return the `id_item`
     * const item_pedidoWithId_itemOnly = await prisma.item_pedido.createManyAndReturn({ 
     *   select: { id_item: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends item_pedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, item_pedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Item_pedido.
     * @param {item_pedidoDeleteArgs} args - Arguments to delete one Item_pedido.
     * @example
     * // Delete one Item_pedido
     * const Item_pedido = await prisma.item_pedido.delete({
     *   where: {
     *     // ... filter to delete one Item_pedido
     *   }
     * })
     * 
     */
    delete<T extends item_pedidoDeleteArgs>(args: SelectSubset<T, item_pedidoDeleteArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Item_pedido.
     * @param {item_pedidoUpdateArgs} args - Arguments to update one Item_pedido.
     * @example
     * // Update one Item_pedido
     * const item_pedido = await prisma.item_pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends item_pedidoUpdateArgs>(args: SelectSubset<T, item_pedidoUpdateArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Item_pedidos.
     * @param {item_pedidoDeleteManyArgs} args - Arguments to filter Item_pedidos to delete.
     * @example
     * // Delete a few Item_pedidos
     * const { count } = await prisma.item_pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends item_pedidoDeleteManyArgs>(args?: SelectSubset<T, item_pedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Item_pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {item_pedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Item_pedidos
     * const item_pedido = await prisma.item_pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends item_pedidoUpdateManyArgs>(args: SelectSubset<T, item_pedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Item_pedido.
     * @param {item_pedidoUpsertArgs} args - Arguments to update or create a Item_pedido.
     * @example
     * // Update or create a Item_pedido
     * const item_pedido = await prisma.item_pedido.upsert({
     *   create: {
     *     // ... data to create a Item_pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Item_pedido we want to update
     *   }
     * })
     */
    upsert<T extends item_pedidoUpsertArgs>(args: SelectSubset<T, item_pedidoUpsertArgs<ExtArgs>>): Prisma__item_pedidoClient<$Result.GetResult<Prisma.$item_pedidoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Item_pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {item_pedidoCountArgs} args - Arguments to filter Item_pedidos to count.
     * @example
     * // Count the number of Item_pedidos
     * const count = await prisma.item_pedido.count({
     *   where: {
     *     // ... the filter for the Item_pedidos we want to count
     *   }
     * })
    **/
    count<T extends item_pedidoCountArgs>(
      args?: Subset<T, item_pedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Item_pedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Item_pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Item_pedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Item_pedidoAggregateArgs>(args: Subset<T, Item_pedidoAggregateArgs>): Prisma.PrismaPromise<GetItem_pedidoAggregateType<T>>

    /**
     * Group by Item_pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {item_pedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends item_pedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: item_pedidoGroupByArgs['orderBy'] }
        : { orderBy?: item_pedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, item_pedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItem_pedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the item_pedido model
   */
  readonly fields: item_pedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for item_pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__item_pedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends pedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, pedidoDefaultArgs<ExtArgs>>): Prisma__pedidoClient<$Result.GetResult<Prisma.$pedidoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    imagem<T extends item_pedido$imagemArgs<ExtArgs> = {}>(args?: Subset<T, item_pedido$imagemArgs<ExtArgs>>): Prisma__imagemClient<$Result.GetResult<Prisma.$imagemPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    personalizacao<T extends item_pedido$personalizacaoArgs<ExtArgs> = {}>(args?: Subset<T, item_pedido$personalizacaoArgs<ExtArgs>>): Prisma__personalizacaoClient<$Result.GetResult<Prisma.$personalizacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the item_pedido model
   */ 
  interface item_pedidoFieldRefs {
    readonly id_item: FieldRef<"item_pedido", 'Int'>
    readonly quantidade: FieldRef<"item_pedido", 'Int'>
    readonly preco_total: FieldRef<"item_pedido", 'Float'>
    readonly pedido_id: FieldRef<"item_pedido", 'Int'>
    readonly produto_id: FieldRef<"item_pedido", 'Int'>
    readonly imagem_id: FieldRef<"item_pedido", 'Int'>
    readonly personalizacao_id: FieldRef<"item_pedido", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * item_pedido findUnique
   */
  export type item_pedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * Filter, which item_pedido to fetch.
     */
    where: item_pedidoWhereUniqueInput
  }

  /**
   * item_pedido findUniqueOrThrow
   */
  export type item_pedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * Filter, which item_pedido to fetch.
     */
    where: item_pedidoWhereUniqueInput
  }

  /**
   * item_pedido findFirst
   */
  export type item_pedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * Filter, which item_pedido to fetch.
     */
    where?: item_pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of item_pedidos to fetch.
     */
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for item_pedidos.
     */
    cursor?: item_pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` item_pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` item_pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of item_pedidos.
     */
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * item_pedido findFirstOrThrow
   */
  export type item_pedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * Filter, which item_pedido to fetch.
     */
    where?: item_pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of item_pedidos to fetch.
     */
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for item_pedidos.
     */
    cursor?: item_pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` item_pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` item_pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of item_pedidos.
     */
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * item_pedido findMany
   */
  export type item_pedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * Filter, which item_pedidos to fetch.
     */
    where?: item_pedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of item_pedidos to fetch.
     */
    orderBy?: item_pedidoOrderByWithRelationInput | item_pedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing item_pedidos.
     */
    cursor?: item_pedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` item_pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` item_pedidos.
     */
    skip?: number
    distinct?: Item_pedidoScalarFieldEnum | Item_pedidoScalarFieldEnum[]
  }

  /**
   * item_pedido create
   */
  export type item_pedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a item_pedido.
     */
    data: XOR<item_pedidoCreateInput, item_pedidoUncheckedCreateInput>
  }

  /**
   * item_pedido createMany
   */
  export type item_pedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many item_pedidos.
     */
    data: item_pedidoCreateManyInput | item_pedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * item_pedido createManyAndReturn
   */
  export type item_pedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many item_pedidos.
     */
    data: item_pedidoCreateManyInput | item_pedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * item_pedido update
   */
  export type item_pedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a item_pedido.
     */
    data: XOR<item_pedidoUpdateInput, item_pedidoUncheckedUpdateInput>
    /**
     * Choose, which item_pedido to update.
     */
    where: item_pedidoWhereUniqueInput
  }

  /**
   * item_pedido updateMany
   */
  export type item_pedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update item_pedidos.
     */
    data: XOR<item_pedidoUpdateManyMutationInput, item_pedidoUncheckedUpdateManyInput>
    /**
     * Filter which item_pedidos to update
     */
    where?: item_pedidoWhereInput
  }

  /**
   * item_pedido upsert
   */
  export type item_pedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the item_pedido to update in case it exists.
     */
    where: item_pedidoWhereUniqueInput
    /**
     * In case the item_pedido found by the `where` argument doesn't exist, create a new item_pedido with this data.
     */
    create: XOR<item_pedidoCreateInput, item_pedidoUncheckedCreateInput>
    /**
     * In case the item_pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<item_pedidoUpdateInput, item_pedidoUncheckedUpdateInput>
  }

  /**
   * item_pedido delete
   */
  export type item_pedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
    /**
     * Filter which item_pedido to delete.
     */
    where: item_pedidoWhereUniqueInput
  }

  /**
   * item_pedido deleteMany
   */
  export type item_pedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which item_pedidos to delete
     */
    where?: item_pedidoWhereInput
  }

  /**
   * item_pedido.imagem
   */
  export type item_pedido$imagemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagem
     */
    select?: imagemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagemInclude<ExtArgs> | null
    where?: imagemWhereInput
  }

  /**
   * item_pedido.personalizacao
   */
  export type item_pedido$personalizacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personalizacao
     */
    select?: personalizacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personalizacaoInclude<ExtArgs> | null
    where?: personalizacaoWhereInput
  }

  /**
   * item_pedido without action
   */
  export type item_pedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item_pedido
     */
    select?: item_pedidoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: item_pedidoInclude<ExtArgs> | null
  }


  /**
   * Model usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    email: string | null
    senha: string | null
    permissao: $Enums.permissao | null
    data_criacao: Date | null
    ultimo_login: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    email: string | null
    senha: string | null
    permissao: $Enums.permissao | null
    data_criacao: Date | null
    ultimo_login: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nome: number
    email: number
    senha: number
    permissao: number
    data_criacao: number
    ultimo_login: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha?: true
    permissao?: true
    data_criacao?: true
    ultimo_login?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha?: true
    permissao?: true
    data_criacao?: true
    ultimo_login?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha?: true
    permissao?: true
    data_criacao?: true
    ultimo_login?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario to aggregate.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithAggregationInput | usuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    nome: string
    email: string
    senha: string
    permissao: $Enums.permissao
    data_criacao: Date
    ultimo_login: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    permissao?: boolean
    data_criacao?: boolean
    ultimo_login?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    permissao?: boolean
    data_criacao?: boolean
    ultimo_login?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectScalar = {
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    permissao?: boolean
    data_criacao?: boolean
    ultimo_login?: boolean
  }


  export type $usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nome: string
      email: string
      senha: string
      permissao: $Enums.permissao
      data_criacao: Date
      ultimo_login: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type usuarioGetPayload<S extends boolean | null | undefined | usuarioDefaultArgs> = $Result.GetResult<Prisma.$usuarioPayload, S>

  type usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario'], meta: { name: 'usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {usuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuarioFindUniqueArgs>(args: SelectSubset<T, usuarioFindUniqueArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {usuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuarioFindFirstArgs>(args?: SelectSubset<T, usuarioFindFirstArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends usuarioFindManyArgs>(args?: SelectSubset<T, usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuario.
     * @param {usuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends usuarioCreateArgs>(args: SelectSubset<T, usuarioCreateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {usuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuarioCreateManyArgs>(args?: SelectSubset<T, usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuario.
     * @param {usuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends usuarioDeleteArgs>(args: SelectSubset<T, usuarioDeleteArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {usuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuarioUpdateArgs>(args: SelectSubset<T, usuarioUpdateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {usuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuarioDeleteManyArgs>(args?: SelectSubset<T, usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuarioUpdateManyArgs>(args: SelectSubset<T, usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {usuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends usuarioUpsertArgs>(args: SelectSubset<T, usuarioUpsertArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuarioCountArgs>(
      args?: Subset<T, usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuarioGroupByArgs['orderBy'] }
        : { orderBy?: usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario model
   */
  readonly fields: usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuario model
   */ 
  interface usuarioFieldRefs {
    readonly id_usuario: FieldRef<"usuario", 'Int'>
    readonly nome: FieldRef<"usuario", 'String'>
    readonly email: FieldRef<"usuario", 'String'>
    readonly senha: FieldRef<"usuario", 'String'>
    readonly permissao: FieldRef<"usuario", 'permissao'>
    readonly data_criacao: FieldRef<"usuario", 'DateTime'>
    readonly ultimo_login: FieldRef<"usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * usuario findUnique
   */
  export type usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findUniqueOrThrow
   */
  export type usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findFirst
   */
  export type usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findFirstOrThrow
   */
  export type usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findMany
   */
  export type usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario create
   */
  export type usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * The data needed to create a usuario.
     */
    data: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
  }

  /**
   * usuario createMany
   */
  export type usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuario createManyAndReturn
   */
  export type usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuario update
   */
  export type usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * The data needed to update a usuario.
     */
    data: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
    /**
     * Choose, which usuario to update.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario updateMany
   */
  export type usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
  }

  /**
   * usuario upsert
   */
  export type usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * The filter to search for the usuario to update in case it exists.
     */
    where: usuarioWhereUniqueInput
    /**
     * In case the usuario found by the `where` argument doesn't exist, create a new usuario with this data.
     */
    create: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
    /**
     * In case the usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
  }

  /**
   * usuario delete
   */
  export type usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Filter which usuario to delete.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario deleteMany
   */
  export type usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuarioWhereInput
  }

  /**
   * usuario without action
   */
  export type usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProdutoScalarFieldEnum: {
    id_produto: 'id_produto',
    nome: 'nome',
    tipo: 'tipo',
    base_custo: 'base_custo',
    margem_lucro: 'margem_lucro',
    material_principal: 'material_principal'
  };

  export type ProdutoScalarFieldEnum = (typeof ProdutoScalarFieldEnum)[keyof typeof ProdutoScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    id_cliente: 'id_cliente',
    nome: 'nome',
    contato: 'contato',
    endereco: 'endereco'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const ImagemScalarFieldEnum: {
    id_imagem: 'id_imagem',
    origem: 'origem',
    custo_adicional: 'custo_adicional'
  };

  export type ImagemScalarFieldEnum = (typeof ImagemScalarFieldEnum)[keyof typeof ImagemScalarFieldEnum]


  export const PedidoScalarFieldEnum: {
    id_pedido: 'id_pedido',
    data: 'data',
    valor_total: 'valor_total',
    status: 'status',
    cliente_id: 'cliente_id'
  };

  export type PedidoScalarFieldEnum = (typeof PedidoScalarFieldEnum)[keyof typeof PedidoScalarFieldEnum]


  export const PersonalizacaoScalarFieldEnum: {
    id_personalizacao: 'id_personalizacao',
    tipo: 'tipo',
    valor_adicional: 'valor_adicional',
    detalhes: 'detalhes'
  };

  export type PersonalizacaoScalarFieldEnum = (typeof PersonalizacaoScalarFieldEnum)[keyof typeof PersonalizacaoScalarFieldEnum]


  export const Item_pedidoScalarFieldEnum: {
    id_item: 'id_item',
    quantidade: 'quantidade',
    preco_total: 'preco_total',
    pedido_id: 'pedido_id',
    produto_id: 'produto_id',
    imagem_id: 'imagem_id',
    personalizacao_id: 'personalizacao_id'
  };

  export type Item_pedidoScalarFieldEnum = (typeof Item_pedidoScalarFieldEnum)[keyof typeof Item_pedidoScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    permissao: 'permissao',
    data_criacao: 'data_criacao',
    ultimo_login: 'ultimo_login'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'permissao'
   */
  export type EnumpermissaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'permissao'>
    


  /**
   * Reference to a field of type 'permissao[]'
   */
  export type ListEnumpermissaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'permissao[]'>
    
  /**
   * Deep Input Types
   */


  export type produtoWhereInput = {
    AND?: produtoWhereInput | produtoWhereInput[]
    OR?: produtoWhereInput[]
    NOT?: produtoWhereInput | produtoWhereInput[]
    id_produto?: IntFilter<"produto"> | number
    nome?: StringFilter<"produto"> | string
    tipo?: StringFilter<"produto"> | string
    base_custo?: FloatFilter<"produto"> | number
    margem_lucro?: FloatFilter<"produto"> | number
    material_principal?: StringFilter<"produto"> | string
    itens_pedido?: Item_pedidoListRelationFilter
  }

  export type produtoOrderByWithRelationInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
    material_principal?: SortOrder
    itens_pedido?: item_pedidoOrderByRelationAggregateInput
  }

  export type produtoWhereUniqueInput = Prisma.AtLeast<{
    id_produto?: number
    AND?: produtoWhereInput | produtoWhereInput[]
    OR?: produtoWhereInput[]
    NOT?: produtoWhereInput | produtoWhereInput[]
    nome?: StringFilter<"produto"> | string
    tipo?: StringFilter<"produto"> | string
    base_custo?: FloatFilter<"produto"> | number
    margem_lucro?: FloatFilter<"produto"> | number
    material_principal?: StringFilter<"produto"> | string
    itens_pedido?: Item_pedidoListRelationFilter
  }, "id_produto">

  export type produtoOrderByWithAggregationInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
    material_principal?: SortOrder
    _count?: produtoCountOrderByAggregateInput
    _avg?: produtoAvgOrderByAggregateInput
    _max?: produtoMaxOrderByAggregateInput
    _min?: produtoMinOrderByAggregateInput
    _sum?: produtoSumOrderByAggregateInput
  }

  export type produtoScalarWhereWithAggregatesInput = {
    AND?: produtoScalarWhereWithAggregatesInput | produtoScalarWhereWithAggregatesInput[]
    OR?: produtoScalarWhereWithAggregatesInput[]
    NOT?: produtoScalarWhereWithAggregatesInput | produtoScalarWhereWithAggregatesInput[]
    id_produto?: IntWithAggregatesFilter<"produto"> | number
    nome?: StringWithAggregatesFilter<"produto"> | string
    tipo?: StringWithAggregatesFilter<"produto"> | string
    base_custo?: FloatWithAggregatesFilter<"produto"> | number
    margem_lucro?: FloatWithAggregatesFilter<"produto"> | number
    material_principal?: StringWithAggregatesFilter<"produto"> | string
  }

  export type clienteWhereInput = {
    AND?: clienteWhereInput | clienteWhereInput[]
    OR?: clienteWhereInput[]
    NOT?: clienteWhereInput | clienteWhereInput[]
    id_cliente?: IntFilter<"cliente"> | number
    nome?: StringFilter<"cliente"> | string
    contato?: StringNullableFilter<"cliente"> | string | null
    endereco?: StringNullableFilter<"cliente"> | string | null
    pedidos?: PedidoListRelationFilter
  }

  export type clienteOrderByWithRelationInput = {
    id_cliente?: SortOrder
    nome?: SortOrder
    contato?: SortOrderInput | SortOrder
    endereco?: SortOrderInput | SortOrder
    pedidos?: pedidoOrderByRelationAggregateInput
  }

  export type clienteWhereUniqueInput = Prisma.AtLeast<{
    id_cliente?: number
    AND?: clienteWhereInput | clienteWhereInput[]
    OR?: clienteWhereInput[]
    NOT?: clienteWhereInput | clienteWhereInput[]
    nome?: StringFilter<"cliente"> | string
    contato?: StringNullableFilter<"cliente"> | string | null
    endereco?: StringNullableFilter<"cliente"> | string | null
    pedidos?: PedidoListRelationFilter
  }, "id_cliente">

  export type clienteOrderByWithAggregationInput = {
    id_cliente?: SortOrder
    nome?: SortOrder
    contato?: SortOrderInput | SortOrder
    endereco?: SortOrderInput | SortOrder
    _count?: clienteCountOrderByAggregateInput
    _avg?: clienteAvgOrderByAggregateInput
    _max?: clienteMaxOrderByAggregateInput
    _min?: clienteMinOrderByAggregateInput
    _sum?: clienteSumOrderByAggregateInput
  }

  export type clienteScalarWhereWithAggregatesInput = {
    AND?: clienteScalarWhereWithAggregatesInput | clienteScalarWhereWithAggregatesInput[]
    OR?: clienteScalarWhereWithAggregatesInput[]
    NOT?: clienteScalarWhereWithAggregatesInput | clienteScalarWhereWithAggregatesInput[]
    id_cliente?: IntWithAggregatesFilter<"cliente"> | number
    nome?: StringWithAggregatesFilter<"cliente"> | string
    contato?: StringNullableWithAggregatesFilter<"cliente"> | string | null
    endereco?: StringNullableWithAggregatesFilter<"cliente"> | string | null
  }

  export type imagemWhereInput = {
    AND?: imagemWhereInput | imagemWhereInput[]
    OR?: imagemWhereInput[]
    NOT?: imagemWhereInput | imagemWhereInput[]
    id_imagem?: IntFilter<"imagem"> | number
    origem?: StringFilter<"imagem"> | string
    custo_adicional?: FloatFilter<"imagem"> | number
    itens_pedido?: Item_pedidoListRelationFilter
  }

  export type imagemOrderByWithRelationInput = {
    id_imagem?: SortOrder
    origem?: SortOrder
    custo_adicional?: SortOrder
    itens_pedido?: item_pedidoOrderByRelationAggregateInput
  }

  export type imagemWhereUniqueInput = Prisma.AtLeast<{
    id_imagem?: number
    AND?: imagemWhereInput | imagemWhereInput[]
    OR?: imagemWhereInput[]
    NOT?: imagemWhereInput | imagemWhereInput[]
    origem?: StringFilter<"imagem"> | string
    custo_adicional?: FloatFilter<"imagem"> | number
    itens_pedido?: Item_pedidoListRelationFilter
  }, "id_imagem">

  export type imagemOrderByWithAggregationInput = {
    id_imagem?: SortOrder
    origem?: SortOrder
    custo_adicional?: SortOrder
    _count?: imagemCountOrderByAggregateInput
    _avg?: imagemAvgOrderByAggregateInput
    _max?: imagemMaxOrderByAggregateInput
    _min?: imagemMinOrderByAggregateInput
    _sum?: imagemSumOrderByAggregateInput
  }

  export type imagemScalarWhereWithAggregatesInput = {
    AND?: imagemScalarWhereWithAggregatesInput | imagemScalarWhereWithAggregatesInput[]
    OR?: imagemScalarWhereWithAggregatesInput[]
    NOT?: imagemScalarWhereWithAggregatesInput | imagemScalarWhereWithAggregatesInput[]
    id_imagem?: IntWithAggregatesFilter<"imagem"> | number
    origem?: StringWithAggregatesFilter<"imagem"> | string
    custo_adicional?: FloatWithAggregatesFilter<"imagem"> | number
  }

  export type pedidoWhereInput = {
    AND?: pedidoWhereInput | pedidoWhereInput[]
    OR?: pedidoWhereInput[]
    NOT?: pedidoWhereInput | pedidoWhereInput[]
    id_pedido?: IntFilter<"pedido"> | number
    data?: DateTimeFilter<"pedido"> | Date | string
    valor_total?: FloatFilter<"pedido"> | number
    status?: StringFilter<"pedido"> | string
    cliente_id?: IntNullableFilter<"pedido"> | number | null
    cliente?: XOR<ClienteNullableRelationFilter, clienteWhereInput> | null
    itens_pedido?: Item_pedidoListRelationFilter
  }

  export type pedidoOrderByWithRelationInput = {
    id_pedido?: SortOrder
    data?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    cliente_id?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
    itens_pedido?: item_pedidoOrderByRelationAggregateInput
  }

  export type pedidoWhereUniqueInput = Prisma.AtLeast<{
    id_pedido?: number
    AND?: pedidoWhereInput | pedidoWhereInput[]
    OR?: pedidoWhereInput[]
    NOT?: pedidoWhereInput | pedidoWhereInput[]
    data?: DateTimeFilter<"pedido"> | Date | string
    valor_total?: FloatFilter<"pedido"> | number
    status?: StringFilter<"pedido"> | string
    cliente_id?: IntNullableFilter<"pedido"> | number | null
    cliente?: XOR<ClienteNullableRelationFilter, clienteWhereInput> | null
    itens_pedido?: Item_pedidoListRelationFilter
  }, "id_pedido">

  export type pedidoOrderByWithAggregationInput = {
    id_pedido?: SortOrder
    data?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    cliente_id?: SortOrderInput | SortOrder
    _count?: pedidoCountOrderByAggregateInput
    _avg?: pedidoAvgOrderByAggregateInput
    _max?: pedidoMaxOrderByAggregateInput
    _min?: pedidoMinOrderByAggregateInput
    _sum?: pedidoSumOrderByAggregateInput
  }

  export type pedidoScalarWhereWithAggregatesInput = {
    AND?: pedidoScalarWhereWithAggregatesInput | pedidoScalarWhereWithAggregatesInput[]
    OR?: pedidoScalarWhereWithAggregatesInput[]
    NOT?: pedidoScalarWhereWithAggregatesInput | pedidoScalarWhereWithAggregatesInput[]
    id_pedido?: IntWithAggregatesFilter<"pedido"> | number
    data?: DateTimeWithAggregatesFilter<"pedido"> | Date | string
    valor_total?: FloatWithAggregatesFilter<"pedido"> | number
    status?: StringWithAggregatesFilter<"pedido"> | string
    cliente_id?: IntNullableWithAggregatesFilter<"pedido"> | number | null
  }

  export type personalizacaoWhereInput = {
    AND?: personalizacaoWhereInput | personalizacaoWhereInput[]
    OR?: personalizacaoWhereInput[]
    NOT?: personalizacaoWhereInput | personalizacaoWhereInput[]
    id_personalizacao?: IntFilter<"personalizacao"> | number
    tipo?: StringFilter<"personalizacao"> | string
    valor_adicional?: FloatFilter<"personalizacao"> | number
    detalhes?: StringNullableFilter<"personalizacao"> | string | null
    itens_pedido?: Item_pedidoListRelationFilter
  }

  export type personalizacaoOrderByWithRelationInput = {
    id_personalizacao?: SortOrder
    tipo?: SortOrder
    valor_adicional?: SortOrder
    detalhes?: SortOrderInput | SortOrder
    itens_pedido?: item_pedidoOrderByRelationAggregateInput
  }

  export type personalizacaoWhereUniqueInput = Prisma.AtLeast<{
    id_personalizacao?: number
    AND?: personalizacaoWhereInput | personalizacaoWhereInput[]
    OR?: personalizacaoWhereInput[]
    NOT?: personalizacaoWhereInput | personalizacaoWhereInput[]
    tipo?: StringFilter<"personalizacao"> | string
    valor_adicional?: FloatFilter<"personalizacao"> | number
    detalhes?: StringNullableFilter<"personalizacao"> | string | null
    itens_pedido?: Item_pedidoListRelationFilter
  }, "id_personalizacao">

  export type personalizacaoOrderByWithAggregationInput = {
    id_personalizacao?: SortOrder
    tipo?: SortOrder
    valor_adicional?: SortOrder
    detalhes?: SortOrderInput | SortOrder
    _count?: personalizacaoCountOrderByAggregateInput
    _avg?: personalizacaoAvgOrderByAggregateInput
    _max?: personalizacaoMaxOrderByAggregateInput
    _min?: personalizacaoMinOrderByAggregateInput
    _sum?: personalizacaoSumOrderByAggregateInput
  }

  export type personalizacaoScalarWhereWithAggregatesInput = {
    AND?: personalizacaoScalarWhereWithAggregatesInput | personalizacaoScalarWhereWithAggregatesInput[]
    OR?: personalizacaoScalarWhereWithAggregatesInput[]
    NOT?: personalizacaoScalarWhereWithAggregatesInput | personalizacaoScalarWhereWithAggregatesInput[]
    id_personalizacao?: IntWithAggregatesFilter<"personalizacao"> | number
    tipo?: StringWithAggregatesFilter<"personalizacao"> | string
    valor_adicional?: FloatWithAggregatesFilter<"personalizacao"> | number
    detalhes?: StringNullableWithAggregatesFilter<"personalizacao"> | string | null
  }

  export type item_pedidoWhereInput = {
    AND?: item_pedidoWhereInput | item_pedidoWhereInput[]
    OR?: item_pedidoWhereInput[]
    NOT?: item_pedidoWhereInput | item_pedidoWhereInput[]
    id_item?: IntFilter<"item_pedido"> | number
    quantidade?: IntFilter<"item_pedido"> | number
    preco_total?: FloatFilter<"item_pedido"> | number
    pedido_id?: IntFilter<"item_pedido"> | number
    produto_id?: IntFilter<"item_pedido"> | number
    imagem_id?: IntNullableFilter<"item_pedido"> | number | null
    personalizacao_id?: IntNullableFilter<"item_pedido"> | number | null
    pedido?: XOR<PedidoRelationFilter, pedidoWhereInput>
    produto?: XOR<ProdutoRelationFilter, produtoWhereInput>
    imagem?: XOR<ImagemNullableRelationFilter, imagemWhereInput> | null
    personalizacao?: XOR<PersonalizacaoNullableRelationFilter, personalizacaoWhereInput> | null
  }

  export type item_pedidoOrderByWithRelationInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrderInput | SortOrder
    personalizacao_id?: SortOrderInput | SortOrder
    pedido?: pedidoOrderByWithRelationInput
    produto?: produtoOrderByWithRelationInput
    imagem?: imagemOrderByWithRelationInput
    personalizacao?: personalizacaoOrderByWithRelationInput
  }

  export type item_pedidoWhereUniqueInput = Prisma.AtLeast<{
    id_item?: number
    AND?: item_pedidoWhereInput | item_pedidoWhereInput[]
    OR?: item_pedidoWhereInput[]
    NOT?: item_pedidoWhereInput | item_pedidoWhereInput[]
    quantidade?: IntFilter<"item_pedido"> | number
    preco_total?: FloatFilter<"item_pedido"> | number
    pedido_id?: IntFilter<"item_pedido"> | number
    produto_id?: IntFilter<"item_pedido"> | number
    imagem_id?: IntNullableFilter<"item_pedido"> | number | null
    personalizacao_id?: IntNullableFilter<"item_pedido"> | number | null
    pedido?: XOR<PedidoRelationFilter, pedidoWhereInput>
    produto?: XOR<ProdutoRelationFilter, produtoWhereInput>
    imagem?: XOR<ImagemNullableRelationFilter, imagemWhereInput> | null
    personalizacao?: XOR<PersonalizacaoNullableRelationFilter, personalizacaoWhereInput> | null
  }, "id_item">

  export type item_pedidoOrderByWithAggregationInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrderInput | SortOrder
    personalizacao_id?: SortOrderInput | SortOrder
    _count?: item_pedidoCountOrderByAggregateInput
    _avg?: item_pedidoAvgOrderByAggregateInput
    _max?: item_pedidoMaxOrderByAggregateInput
    _min?: item_pedidoMinOrderByAggregateInput
    _sum?: item_pedidoSumOrderByAggregateInput
  }

  export type item_pedidoScalarWhereWithAggregatesInput = {
    AND?: item_pedidoScalarWhereWithAggregatesInput | item_pedidoScalarWhereWithAggregatesInput[]
    OR?: item_pedidoScalarWhereWithAggregatesInput[]
    NOT?: item_pedidoScalarWhereWithAggregatesInput | item_pedidoScalarWhereWithAggregatesInput[]
    id_item?: IntWithAggregatesFilter<"item_pedido"> | number
    quantidade?: IntWithAggregatesFilter<"item_pedido"> | number
    preco_total?: FloatWithAggregatesFilter<"item_pedido"> | number
    pedido_id?: IntWithAggregatesFilter<"item_pedido"> | number
    produto_id?: IntWithAggregatesFilter<"item_pedido"> | number
    imagem_id?: IntNullableWithAggregatesFilter<"item_pedido"> | number | null
    personalizacao_id?: IntNullableWithAggregatesFilter<"item_pedido"> | number | null
  }

  export type usuarioWhereInput = {
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    id_usuario?: IntFilter<"usuario"> | number
    nome?: StringFilter<"usuario"> | string
    email?: StringFilter<"usuario"> | string
    senha?: StringFilter<"usuario"> | string
    permissao?: EnumpermissaoFilter<"usuario"> | $Enums.permissao
    data_criacao?: DateTimeFilter<"usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"usuario"> | Date | string | null
  }

  export type usuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    permissao?: SortOrder
    data_criacao?: SortOrder
    ultimo_login?: SortOrderInput | SortOrder
  }

  export type usuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    email?: string
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    nome?: StringFilter<"usuario"> | string
    senha?: StringFilter<"usuario"> | string
    permissao?: EnumpermissaoFilter<"usuario"> | $Enums.permissao
    data_criacao?: DateTimeFilter<"usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"usuario"> | Date | string | null
  }, "id_usuario" | "email">

  export type usuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    permissao?: SortOrder
    data_criacao?: SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    _count?: usuarioCountOrderByAggregateInput
    _avg?: usuarioAvgOrderByAggregateInput
    _max?: usuarioMaxOrderByAggregateInput
    _min?: usuarioMinOrderByAggregateInput
    _sum?: usuarioSumOrderByAggregateInput
  }

  export type usuarioScalarWhereWithAggregatesInput = {
    AND?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    OR?: usuarioScalarWhereWithAggregatesInput[]
    NOT?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"usuario"> | number
    nome?: StringWithAggregatesFilter<"usuario"> | string
    email?: StringWithAggregatesFilter<"usuario"> | string
    senha?: StringWithAggregatesFilter<"usuario"> | string
    permissao?: EnumpermissaoWithAggregatesFilter<"usuario"> | $Enums.permissao
    data_criacao?: DateTimeWithAggregatesFilter<"usuario"> | Date | string
    ultimo_login?: DateTimeNullableWithAggregatesFilter<"usuario"> | Date | string | null
  }

  export type produtoCreateInput = {
    nome: string
    tipo: string
    base_custo: number
    margem_lucro: number
    material_principal: string
    itens_pedido?: item_pedidoCreateNestedManyWithoutProdutoInput
  }

  export type produtoUncheckedCreateInput = {
    id_produto?: number
    nome: string
    tipo: string
    base_custo: number
    margem_lucro: number
    material_principal: string
    itens_pedido?: item_pedidoUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    base_custo?: FloatFieldUpdateOperationsInput | number
    margem_lucro?: FloatFieldUpdateOperationsInput | number
    material_principal?: StringFieldUpdateOperationsInput | string
    itens_pedido?: item_pedidoUpdateManyWithoutProdutoNestedInput
  }

  export type produtoUncheckedUpdateInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    base_custo?: FloatFieldUpdateOperationsInput | number
    margem_lucro?: FloatFieldUpdateOperationsInput | number
    material_principal?: StringFieldUpdateOperationsInput | string
    itens_pedido?: item_pedidoUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type produtoCreateManyInput = {
    id_produto?: number
    nome: string
    tipo: string
    base_custo: number
    margem_lucro: number
    material_principal: string
  }

  export type produtoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    base_custo?: FloatFieldUpdateOperationsInput | number
    margem_lucro?: FloatFieldUpdateOperationsInput | number
    material_principal?: StringFieldUpdateOperationsInput | string
  }

  export type produtoUncheckedUpdateManyInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    base_custo?: FloatFieldUpdateOperationsInput | number
    margem_lucro?: FloatFieldUpdateOperationsInput | number
    material_principal?: StringFieldUpdateOperationsInput | string
  }

  export type clienteCreateInput = {
    nome: string
    contato?: string | null
    endereco?: string | null
    pedidos?: pedidoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateInput = {
    id_cliente?: number
    nome: string
    contato?: string | null
    endereco?: string | null
    pedidos?: pedidoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    contato?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    pedidos?: pedidoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contato?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    pedidos?: pedidoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateManyInput = {
    id_cliente?: number
    nome: string
    contato?: string | null
    endereco?: string | null
  }

  export type clienteUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    contato?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clienteUncheckedUpdateManyInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contato?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type imagemCreateInput = {
    origem: string
    custo_adicional: number
    itens_pedido?: item_pedidoCreateNestedManyWithoutImagemInput
  }

  export type imagemUncheckedCreateInput = {
    id_imagem?: number
    origem: string
    custo_adicional: number
    itens_pedido?: item_pedidoUncheckedCreateNestedManyWithoutImagemInput
  }

  export type imagemUpdateInput = {
    origem?: StringFieldUpdateOperationsInput | string
    custo_adicional?: FloatFieldUpdateOperationsInput | number
    itens_pedido?: item_pedidoUpdateManyWithoutImagemNestedInput
  }

  export type imagemUncheckedUpdateInput = {
    id_imagem?: IntFieldUpdateOperationsInput | number
    origem?: StringFieldUpdateOperationsInput | string
    custo_adicional?: FloatFieldUpdateOperationsInput | number
    itens_pedido?: item_pedidoUncheckedUpdateManyWithoutImagemNestedInput
  }

  export type imagemCreateManyInput = {
    id_imagem?: number
    origem: string
    custo_adicional: number
  }

  export type imagemUpdateManyMutationInput = {
    origem?: StringFieldUpdateOperationsInput | string
    custo_adicional?: FloatFieldUpdateOperationsInput | number
  }

  export type imagemUncheckedUpdateManyInput = {
    id_imagem?: IntFieldUpdateOperationsInput | number
    origem?: StringFieldUpdateOperationsInput | string
    custo_adicional?: FloatFieldUpdateOperationsInput | number
  }

  export type pedidoCreateInput = {
    data?: Date | string
    valor_total: number
    status: string
    cliente?: clienteCreateNestedOneWithoutPedidosInput
    itens_pedido?: item_pedidoCreateNestedManyWithoutPedidoInput
  }

  export type pedidoUncheckedCreateInput = {
    id_pedido?: number
    data?: Date | string
    valor_total: number
    status: string
    cliente_id?: number | null
    itens_pedido?: item_pedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type pedidoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    cliente?: clienteUpdateOneWithoutPedidosNestedInput
    itens_pedido?: item_pedidoUpdateManyWithoutPedidoNestedInput
  }

  export type pedidoUncheckedUpdateInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    cliente_id?: NullableIntFieldUpdateOperationsInput | number | null
    itens_pedido?: item_pedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type pedidoCreateManyInput = {
    id_pedido?: number
    data?: Date | string
    valor_total: number
    status: string
    cliente_id?: number | null
  }

  export type pedidoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
  }

  export type pedidoUncheckedUpdateManyInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    cliente_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type personalizacaoCreateInput = {
    tipo: string
    valor_adicional: number
    detalhes?: string | null
    itens_pedido?: item_pedidoCreateNestedManyWithoutPersonalizacaoInput
  }

  export type personalizacaoUncheckedCreateInput = {
    id_personalizacao?: number
    tipo: string
    valor_adicional: number
    detalhes?: string | null
    itens_pedido?: item_pedidoUncheckedCreateNestedManyWithoutPersonalizacaoInput
  }

  export type personalizacaoUpdateInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    valor_adicional?: FloatFieldUpdateOperationsInput | number
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
    itens_pedido?: item_pedidoUpdateManyWithoutPersonalizacaoNestedInput
  }

  export type personalizacaoUncheckedUpdateInput = {
    id_personalizacao?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    valor_adicional?: FloatFieldUpdateOperationsInput | number
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
    itens_pedido?: item_pedidoUncheckedUpdateManyWithoutPersonalizacaoNestedInput
  }

  export type personalizacaoCreateManyInput = {
    id_personalizacao?: number
    tipo: string
    valor_adicional: number
    detalhes?: string | null
  }

  export type personalizacaoUpdateManyMutationInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    valor_adicional?: FloatFieldUpdateOperationsInput | number
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type personalizacaoUncheckedUpdateManyInput = {
    id_personalizacao?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    valor_adicional?: FloatFieldUpdateOperationsInput | number
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type item_pedidoCreateInput = {
    quantidade?: number
    preco_total: number
    pedido: pedidoCreateNestedOneWithoutItens_pedidoInput
    produto: produtoCreateNestedOneWithoutItens_pedidoInput
    imagem?: imagemCreateNestedOneWithoutItens_pedidoInput
    personalizacao?: personalizacaoCreateNestedOneWithoutItens_pedidoInput
  }

  export type item_pedidoUncheckedCreateInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    produto_id: number
    imagem_id?: number | null
    personalizacao_id?: number | null
  }

  export type item_pedidoUpdateInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido?: pedidoUpdateOneRequiredWithoutItens_pedidoNestedInput
    produto?: produtoUpdateOneRequiredWithoutItens_pedidoNestedInput
    imagem?: imagemUpdateOneWithoutItens_pedidoNestedInput
    personalizacao?: personalizacaoUpdateOneWithoutItens_pedidoNestedInput
  }

  export type item_pedidoUncheckedUpdateInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoCreateManyInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    produto_id: number
    imagem_id?: number | null
    personalizacao_id?: number | null
  }

  export type item_pedidoUpdateManyMutationInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
  }

  export type item_pedidoUncheckedUpdateManyInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuarioCreateInput = {
    nome: string
    email: string
    senha: string
    permissao?: $Enums.permissao
    data_criacao?: Date | string
    ultimo_login?: Date | string | null
  }

  export type usuarioUncheckedCreateInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    permissao?: $Enums.permissao
    data_criacao?: Date | string
    ultimo_login?: Date | string | null
  }

  export type usuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    permissao?: EnumpermissaoFieldUpdateOperationsInput | $Enums.permissao
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    permissao?: EnumpermissaoFieldUpdateOperationsInput | $Enums.permissao
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuarioCreateManyInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    permissao?: $Enums.permissao
    data_criacao?: Date | string
    ultimo_login?: Date | string | null
  }

  export type usuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    permissao?: EnumpermissaoFieldUpdateOperationsInput | $Enums.permissao
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    permissao?: EnumpermissaoFieldUpdateOperationsInput | $Enums.permissao
    data_criacao?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type Item_pedidoListRelationFilter = {
    every?: item_pedidoWhereInput
    some?: item_pedidoWhereInput
    none?: item_pedidoWhereInput
  }

  export type item_pedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type produtoCountOrderByAggregateInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
    material_principal?: SortOrder
  }

  export type produtoAvgOrderByAggregateInput = {
    id_produto?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
  }

  export type produtoMaxOrderByAggregateInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
    material_principal?: SortOrder
  }

  export type produtoMinOrderByAggregateInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
    material_principal?: SortOrder
  }

  export type produtoSumOrderByAggregateInput = {
    id_produto?: SortOrder
    base_custo?: SortOrder
    margem_lucro?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type PedidoListRelationFilter = {
    every?: pedidoWhereInput
    some?: pedidoWhereInput
    none?: pedidoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type pedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clienteCountOrderByAggregateInput = {
    id_cliente?: SortOrder
    nome?: SortOrder
    contato?: SortOrder
    endereco?: SortOrder
  }

  export type clienteAvgOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type clienteMaxOrderByAggregateInput = {
    id_cliente?: SortOrder
    nome?: SortOrder
    contato?: SortOrder
    endereco?: SortOrder
  }

  export type clienteMinOrderByAggregateInput = {
    id_cliente?: SortOrder
    nome?: SortOrder
    contato?: SortOrder
    endereco?: SortOrder
  }

  export type clienteSumOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type imagemCountOrderByAggregateInput = {
    id_imagem?: SortOrder
    origem?: SortOrder
    custo_adicional?: SortOrder
  }

  export type imagemAvgOrderByAggregateInput = {
    id_imagem?: SortOrder
    custo_adicional?: SortOrder
  }

  export type imagemMaxOrderByAggregateInput = {
    id_imagem?: SortOrder
    origem?: SortOrder
    custo_adicional?: SortOrder
  }

  export type imagemMinOrderByAggregateInput = {
    id_imagem?: SortOrder
    origem?: SortOrder
    custo_adicional?: SortOrder
  }

  export type imagemSumOrderByAggregateInput = {
    id_imagem?: SortOrder
    custo_adicional?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ClienteNullableRelationFilter = {
    is?: clienteWhereInput | null
    isNot?: clienteWhereInput | null
  }

  export type pedidoCountOrderByAggregateInput = {
    id_pedido?: SortOrder
    data?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    cliente_id?: SortOrder
  }

  export type pedidoAvgOrderByAggregateInput = {
    id_pedido?: SortOrder
    valor_total?: SortOrder
    cliente_id?: SortOrder
  }

  export type pedidoMaxOrderByAggregateInput = {
    id_pedido?: SortOrder
    data?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    cliente_id?: SortOrder
  }

  export type pedidoMinOrderByAggregateInput = {
    id_pedido?: SortOrder
    data?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    cliente_id?: SortOrder
  }

  export type pedidoSumOrderByAggregateInput = {
    id_pedido?: SortOrder
    valor_total?: SortOrder
    cliente_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type personalizacaoCountOrderByAggregateInput = {
    id_personalizacao?: SortOrder
    tipo?: SortOrder
    valor_adicional?: SortOrder
    detalhes?: SortOrder
  }

  export type personalizacaoAvgOrderByAggregateInput = {
    id_personalizacao?: SortOrder
    valor_adicional?: SortOrder
  }

  export type personalizacaoMaxOrderByAggregateInput = {
    id_personalizacao?: SortOrder
    tipo?: SortOrder
    valor_adicional?: SortOrder
    detalhes?: SortOrder
  }

  export type personalizacaoMinOrderByAggregateInput = {
    id_personalizacao?: SortOrder
    tipo?: SortOrder
    valor_adicional?: SortOrder
    detalhes?: SortOrder
  }

  export type personalizacaoSumOrderByAggregateInput = {
    id_personalizacao?: SortOrder
    valor_adicional?: SortOrder
  }

  export type PedidoRelationFilter = {
    is?: pedidoWhereInput
    isNot?: pedidoWhereInput
  }

  export type ProdutoRelationFilter = {
    is?: produtoWhereInput
    isNot?: produtoWhereInput
  }

  export type ImagemNullableRelationFilter = {
    is?: imagemWhereInput | null
    isNot?: imagemWhereInput | null
  }

  export type PersonalizacaoNullableRelationFilter = {
    is?: personalizacaoWhereInput | null
    isNot?: personalizacaoWhereInput | null
  }

  export type item_pedidoCountOrderByAggregateInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrder
    personalizacao_id?: SortOrder
  }

  export type item_pedidoAvgOrderByAggregateInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrder
    personalizacao_id?: SortOrder
  }

  export type item_pedidoMaxOrderByAggregateInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrder
    personalizacao_id?: SortOrder
  }

  export type item_pedidoMinOrderByAggregateInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrder
    personalizacao_id?: SortOrder
  }

  export type item_pedidoSumOrderByAggregateInput = {
    id_item?: SortOrder
    quantidade?: SortOrder
    preco_total?: SortOrder
    pedido_id?: SortOrder
    produto_id?: SortOrder
    imagem_id?: SortOrder
    personalizacao_id?: SortOrder
  }

  export type EnumpermissaoFilter<$PrismaModel = never> = {
    equals?: $Enums.permissao | EnumpermissaoFieldRefInput<$PrismaModel>
    in?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    not?: NestedEnumpermissaoFilter<$PrismaModel> | $Enums.permissao
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type usuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    permissao?: SortOrder
    data_criacao?: SortOrder
    ultimo_login?: SortOrder
  }

  export type usuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type usuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    permissao?: SortOrder
    data_criacao?: SortOrder
    ultimo_login?: SortOrder
  }

  export type usuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    permissao?: SortOrder
    data_criacao?: SortOrder
    ultimo_login?: SortOrder
  }

  export type usuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type EnumpermissaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.permissao | EnumpermissaoFieldRefInput<$PrismaModel>
    in?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    not?: NestedEnumpermissaoWithAggregatesFilter<$PrismaModel> | $Enums.permissao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpermissaoFilter<$PrismaModel>
    _max?: NestedEnumpermissaoFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type item_pedidoCreateNestedManyWithoutProdutoInput = {
    create?: XOR<item_pedidoCreateWithoutProdutoInput, item_pedidoUncheckedCreateWithoutProdutoInput> | item_pedidoCreateWithoutProdutoInput[] | item_pedidoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutProdutoInput | item_pedidoCreateOrConnectWithoutProdutoInput[]
    createMany?: item_pedidoCreateManyProdutoInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type item_pedidoUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<item_pedidoCreateWithoutProdutoInput, item_pedidoUncheckedCreateWithoutProdutoInput> | item_pedidoCreateWithoutProdutoInput[] | item_pedidoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutProdutoInput | item_pedidoCreateOrConnectWithoutProdutoInput[]
    createMany?: item_pedidoCreateManyProdutoInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type item_pedidoUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<item_pedidoCreateWithoutProdutoInput, item_pedidoUncheckedCreateWithoutProdutoInput> | item_pedidoCreateWithoutProdutoInput[] | item_pedidoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutProdutoInput | item_pedidoCreateOrConnectWithoutProdutoInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutProdutoInput | item_pedidoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: item_pedidoCreateManyProdutoInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutProdutoInput | item_pedidoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutProdutoInput | item_pedidoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type item_pedidoUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<item_pedidoCreateWithoutProdutoInput, item_pedidoUncheckedCreateWithoutProdutoInput> | item_pedidoCreateWithoutProdutoInput[] | item_pedidoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutProdutoInput | item_pedidoCreateOrConnectWithoutProdutoInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutProdutoInput | item_pedidoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: item_pedidoCreateManyProdutoInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutProdutoInput | item_pedidoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutProdutoInput | item_pedidoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type pedidoCreateNestedManyWithoutClienteInput = {
    create?: XOR<pedidoCreateWithoutClienteInput, pedidoUncheckedCreateWithoutClienteInput> | pedidoCreateWithoutClienteInput[] | pedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: pedidoCreateOrConnectWithoutClienteInput | pedidoCreateOrConnectWithoutClienteInput[]
    createMany?: pedidoCreateManyClienteInputEnvelope
    connect?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
  }

  export type pedidoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<pedidoCreateWithoutClienteInput, pedidoUncheckedCreateWithoutClienteInput> | pedidoCreateWithoutClienteInput[] | pedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: pedidoCreateOrConnectWithoutClienteInput | pedidoCreateOrConnectWithoutClienteInput[]
    createMany?: pedidoCreateManyClienteInputEnvelope
    connect?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type pedidoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<pedidoCreateWithoutClienteInput, pedidoUncheckedCreateWithoutClienteInput> | pedidoCreateWithoutClienteInput[] | pedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: pedidoCreateOrConnectWithoutClienteInput | pedidoCreateOrConnectWithoutClienteInput[]
    upsert?: pedidoUpsertWithWhereUniqueWithoutClienteInput | pedidoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: pedidoCreateManyClienteInputEnvelope
    set?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    disconnect?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    delete?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    connect?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    update?: pedidoUpdateWithWhereUniqueWithoutClienteInput | pedidoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: pedidoUpdateManyWithWhereWithoutClienteInput | pedidoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: pedidoScalarWhereInput | pedidoScalarWhereInput[]
  }

  export type pedidoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<pedidoCreateWithoutClienteInput, pedidoUncheckedCreateWithoutClienteInput> | pedidoCreateWithoutClienteInput[] | pedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: pedidoCreateOrConnectWithoutClienteInput | pedidoCreateOrConnectWithoutClienteInput[]
    upsert?: pedidoUpsertWithWhereUniqueWithoutClienteInput | pedidoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: pedidoCreateManyClienteInputEnvelope
    set?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    disconnect?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    delete?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    connect?: pedidoWhereUniqueInput | pedidoWhereUniqueInput[]
    update?: pedidoUpdateWithWhereUniqueWithoutClienteInput | pedidoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: pedidoUpdateManyWithWhereWithoutClienteInput | pedidoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: pedidoScalarWhereInput | pedidoScalarWhereInput[]
  }

  export type item_pedidoCreateNestedManyWithoutImagemInput = {
    create?: XOR<item_pedidoCreateWithoutImagemInput, item_pedidoUncheckedCreateWithoutImagemInput> | item_pedidoCreateWithoutImagemInput[] | item_pedidoUncheckedCreateWithoutImagemInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutImagemInput | item_pedidoCreateOrConnectWithoutImagemInput[]
    createMany?: item_pedidoCreateManyImagemInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type item_pedidoUncheckedCreateNestedManyWithoutImagemInput = {
    create?: XOR<item_pedidoCreateWithoutImagemInput, item_pedidoUncheckedCreateWithoutImagemInput> | item_pedidoCreateWithoutImagemInput[] | item_pedidoUncheckedCreateWithoutImagemInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutImagemInput | item_pedidoCreateOrConnectWithoutImagemInput[]
    createMany?: item_pedidoCreateManyImagemInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type item_pedidoUpdateManyWithoutImagemNestedInput = {
    create?: XOR<item_pedidoCreateWithoutImagemInput, item_pedidoUncheckedCreateWithoutImagemInput> | item_pedidoCreateWithoutImagemInput[] | item_pedidoUncheckedCreateWithoutImagemInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutImagemInput | item_pedidoCreateOrConnectWithoutImagemInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutImagemInput | item_pedidoUpsertWithWhereUniqueWithoutImagemInput[]
    createMany?: item_pedidoCreateManyImagemInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutImagemInput | item_pedidoUpdateWithWhereUniqueWithoutImagemInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutImagemInput | item_pedidoUpdateManyWithWhereWithoutImagemInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type item_pedidoUncheckedUpdateManyWithoutImagemNestedInput = {
    create?: XOR<item_pedidoCreateWithoutImagemInput, item_pedidoUncheckedCreateWithoutImagemInput> | item_pedidoCreateWithoutImagemInput[] | item_pedidoUncheckedCreateWithoutImagemInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutImagemInput | item_pedidoCreateOrConnectWithoutImagemInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutImagemInput | item_pedidoUpsertWithWhereUniqueWithoutImagemInput[]
    createMany?: item_pedidoCreateManyImagemInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutImagemInput | item_pedidoUpdateWithWhereUniqueWithoutImagemInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutImagemInput | item_pedidoUpdateManyWithWhereWithoutImagemInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type clienteCreateNestedOneWithoutPedidosInput = {
    create?: XOR<clienteCreateWithoutPedidosInput, clienteUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: clienteCreateOrConnectWithoutPedidosInput
    connect?: clienteWhereUniqueInput
  }

  export type item_pedidoCreateNestedManyWithoutPedidoInput = {
    create?: XOR<item_pedidoCreateWithoutPedidoInput, item_pedidoUncheckedCreateWithoutPedidoInput> | item_pedidoCreateWithoutPedidoInput[] | item_pedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPedidoInput | item_pedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: item_pedidoCreateManyPedidoInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type item_pedidoUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<item_pedidoCreateWithoutPedidoInput, item_pedidoUncheckedCreateWithoutPedidoInput> | item_pedidoCreateWithoutPedidoInput[] | item_pedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPedidoInput | item_pedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: item_pedidoCreateManyPedidoInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type clienteUpdateOneWithoutPedidosNestedInput = {
    create?: XOR<clienteCreateWithoutPedidosInput, clienteUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: clienteCreateOrConnectWithoutPedidosInput
    upsert?: clienteUpsertWithoutPedidosInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutPedidosInput, clienteUpdateWithoutPedidosInput>, clienteUncheckedUpdateWithoutPedidosInput>
  }

  export type item_pedidoUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<item_pedidoCreateWithoutPedidoInput, item_pedidoUncheckedCreateWithoutPedidoInput> | item_pedidoCreateWithoutPedidoInput[] | item_pedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPedidoInput | item_pedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutPedidoInput | item_pedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: item_pedidoCreateManyPedidoInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutPedidoInput | item_pedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutPedidoInput | item_pedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type item_pedidoUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<item_pedidoCreateWithoutPedidoInput, item_pedidoUncheckedCreateWithoutPedidoInput> | item_pedidoCreateWithoutPedidoInput[] | item_pedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPedidoInput | item_pedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutPedidoInput | item_pedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: item_pedidoCreateManyPedidoInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutPedidoInput | item_pedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutPedidoInput | item_pedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type item_pedidoCreateNestedManyWithoutPersonalizacaoInput = {
    create?: XOR<item_pedidoCreateWithoutPersonalizacaoInput, item_pedidoUncheckedCreateWithoutPersonalizacaoInput> | item_pedidoCreateWithoutPersonalizacaoInput[] | item_pedidoUncheckedCreateWithoutPersonalizacaoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPersonalizacaoInput | item_pedidoCreateOrConnectWithoutPersonalizacaoInput[]
    createMany?: item_pedidoCreateManyPersonalizacaoInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type item_pedidoUncheckedCreateNestedManyWithoutPersonalizacaoInput = {
    create?: XOR<item_pedidoCreateWithoutPersonalizacaoInput, item_pedidoUncheckedCreateWithoutPersonalizacaoInput> | item_pedidoCreateWithoutPersonalizacaoInput[] | item_pedidoUncheckedCreateWithoutPersonalizacaoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPersonalizacaoInput | item_pedidoCreateOrConnectWithoutPersonalizacaoInput[]
    createMany?: item_pedidoCreateManyPersonalizacaoInputEnvelope
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
  }

  export type item_pedidoUpdateManyWithoutPersonalizacaoNestedInput = {
    create?: XOR<item_pedidoCreateWithoutPersonalizacaoInput, item_pedidoUncheckedCreateWithoutPersonalizacaoInput> | item_pedidoCreateWithoutPersonalizacaoInput[] | item_pedidoUncheckedCreateWithoutPersonalizacaoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPersonalizacaoInput | item_pedidoCreateOrConnectWithoutPersonalizacaoInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutPersonalizacaoInput | item_pedidoUpsertWithWhereUniqueWithoutPersonalizacaoInput[]
    createMany?: item_pedidoCreateManyPersonalizacaoInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutPersonalizacaoInput | item_pedidoUpdateWithWhereUniqueWithoutPersonalizacaoInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutPersonalizacaoInput | item_pedidoUpdateManyWithWhereWithoutPersonalizacaoInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type item_pedidoUncheckedUpdateManyWithoutPersonalizacaoNestedInput = {
    create?: XOR<item_pedidoCreateWithoutPersonalizacaoInput, item_pedidoUncheckedCreateWithoutPersonalizacaoInput> | item_pedidoCreateWithoutPersonalizacaoInput[] | item_pedidoUncheckedCreateWithoutPersonalizacaoInput[]
    connectOrCreate?: item_pedidoCreateOrConnectWithoutPersonalizacaoInput | item_pedidoCreateOrConnectWithoutPersonalizacaoInput[]
    upsert?: item_pedidoUpsertWithWhereUniqueWithoutPersonalizacaoInput | item_pedidoUpsertWithWhereUniqueWithoutPersonalizacaoInput[]
    createMany?: item_pedidoCreateManyPersonalizacaoInputEnvelope
    set?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    disconnect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    delete?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    connect?: item_pedidoWhereUniqueInput | item_pedidoWhereUniqueInput[]
    update?: item_pedidoUpdateWithWhereUniqueWithoutPersonalizacaoInput | item_pedidoUpdateWithWhereUniqueWithoutPersonalizacaoInput[]
    updateMany?: item_pedidoUpdateManyWithWhereWithoutPersonalizacaoInput | item_pedidoUpdateManyWithWhereWithoutPersonalizacaoInput[]
    deleteMany?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
  }

  export type pedidoCreateNestedOneWithoutItens_pedidoInput = {
    create?: XOR<pedidoCreateWithoutItens_pedidoInput, pedidoUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: pedidoCreateOrConnectWithoutItens_pedidoInput
    connect?: pedidoWhereUniqueInput
  }

  export type produtoCreateNestedOneWithoutItens_pedidoInput = {
    create?: XOR<produtoCreateWithoutItens_pedidoInput, produtoUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: produtoCreateOrConnectWithoutItens_pedidoInput
    connect?: produtoWhereUniqueInput
  }

  export type imagemCreateNestedOneWithoutItens_pedidoInput = {
    create?: XOR<imagemCreateWithoutItens_pedidoInput, imagemUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: imagemCreateOrConnectWithoutItens_pedidoInput
    connect?: imagemWhereUniqueInput
  }

  export type personalizacaoCreateNestedOneWithoutItens_pedidoInput = {
    create?: XOR<personalizacaoCreateWithoutItens_pedidoInput, personalizacaoUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: personalizacaoCreateOrConnectWithoutItens_pedidoInput
    connect?: personalizacaoWhereUniqueInput
  }

  export type pedidoUpdateOneRequiredWithoutItens_pedidoNestedInput = {
    create?: XOR<pedidoCreateWithoutItens_pedidoInput, pedidoUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: pedidoCreateOrConnectWithoutItens_pedidoInput
    upsert?: pedidoUpsertWithoutItens_pedidoInput
    connect?: pedidoWhereUniqueInput
    update?: XOR<XOR<pedidoUpdateToOneWithWhereWithoutItens_pedidoInput, pedidoUpdateWithoutItens_pedidoInput>, pedidoUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type produtoUpdateOneRequiredWithoutItens_pedidoNestedInput = {
    create?: XOR<produtoCreateWithoutItens_pedidoInput, produtoUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: produtoCreateOrConnectWithoutItens_pedidoInput
    upsert?: produtoUpsertWithoutItens_pedidoInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutItens_pedidoInput, produtoUpdateWithoutItens_pedidoInput>, produtoUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type imagemUpdateOneWithoutItens_pedidoNestedInput = {
    create?: XOR<imagemCreateWithoutItens_pedidoInput, imagemUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: imagemCreateOrConnectWithoutItens_pedidoInput
    upsert?: imagemUpsertWithoutItens_pedidoInput
    disconnect?: imagemWhereInput | boolean
    delete?: imagemWhereInput | boolean
    connect?: imagemWhereUniqueInput
    update?: XOR<XOR<imagemUpdateToOneWithWhereWithoutItens_pedidoInput, imagemUpdateWithoutItens_pedidoInput>, imagemUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type personalizacaoUpdateOneWithoutItens_pedidoNestedInput = {
    create?: XOR<personalizacaoCreateWithoutItens_pedidoInput, personalizacaoUncheckedCreateWithoutItens_pedidoInput>
    connectOrCreate?: personalizacaoCreateOrConnectWithoutItens_pedidoInput
    upsert?: personalizacaoUpsertWithoutItens_pedidoInput
    disconnect?: personalizacaoWhereInput | boolean
    delete?: personalizacaoWhereInput | boolean
    connect?: personalizacaoWhereUniqueInput
    update?: XOR<XOR<personalizacaoUpdateToOneWithWhereWithoutItens_pedidoInput, personalizacaoUpdateWithoutItens_pedidoInput>, personalizacaoUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type EnumpermissaoFieldUpdateOperationsInput = {
    set?: $Enums.permissao
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumpermissaoFilter<$PrismaModel = never> = {
    equals?: $Enums.permissao | EnumpermissaoFieldRefInput<$PrismaModel>
    in?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    not?: NestedEnumpermissaoFilter<$PrismaModel> | $Enums.permissao
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumpermissaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.permissao | EnumpermissaoFieldRefInput<$PrismaModel>
    in?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.permissao[] | ListEnumpermissaoFieldRefInput<$PrismaModel>
    not?: NestedEnumpermissaoWithAggregatesFilter<$PrismaModel> | $Enums.permissao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpermissaoFilter<$PrismaModel>
    _max?: NestedEnumpermissaoFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type item_pedidoCreateWithoutProdutoInput = {
    quantidade?: number
    preco_total: number
    pedido: pedidoCreateNestedOneWithoutItens_pedidoInput
    imagem?: imagemCreateNestedOneWithoutItens_pedidoInput
    personalizacao?: personalizacaoCreateNestedOneWithoutItens_pedidoInput
  }

  export type item_pedidoUncheckedCreateWithoutProdutoInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    imagem_id?: number | null
    personalizacao_id?: number | null
  }

  export type item_pedidoCreateOrConnectWithoutProdutoInput = {
    where: item_pedidoWhereUniqueInput
    create: XOR<item_pedidoCreateWithoutProdutoInput, item_pedidoUncheckedCreateWithoutProdutoInput>
  }

  export type item_pedidoCreateManyProdutoInputEnvelope = {
    data: item_pedidoCreateManyProdutoInput | item_pedidoCreateManyProdutoInput[]
    skipDuplicates?: boolean
  }

  export type item_pedidoUpsertWithWhereUniqueWithoutProdutoInput = {
    where: item_pedidoWhereUniqueInput
    update: XOR<item_pedidoUpdateWithoutProdutoInput, item_pedidoUncheckedUpdateWithoutProdutoInput>
    create: XOR<item_pedidoCreateWithoutProdutoInput, item_pedidoUncheckedCreateWithoutProdutoInput>
  }

  export type item_pedidoUpdateWithWhereUniqueWithoutProdutoInput = {
    where: item_pedidoWhereUniqueInput
    data: XOR<item_pedidoUpdateWithoutProdutoInput, item_pedidoUncheckedUpdateWithoutProdutoInput>
  }

  export type item_pedidoUpdateManyWithWhereWithoutProdutoInput = {
    where: item_pedidoScalarWhereInput
    data: XOR<item_pedidoUpdateManyMutationInput, item_pedidoUncheckedUpdateManyWithoutProdutoInput>
  }

  export type item_pedidoScalarWhereInput = {
    AND?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
    OR?: item_pedidoScalarWhereInput[]
    NOT?: item_pedidoScalarWhereInput | item_pedidoScalarWhereInput[]
    id_item?: IntFilter<"item_pedido"> | number
    quantidade?: IntFilter<"item_pedido"> | number
    preco_total?: FloatFilter<"item_pedido"> | number
    pedido_id?: IntFilter<"item_pedido"> | number
    produto_id?: IntFilter<"item_pedido"> | number
    imagem_id?: IntNullableFilter<"item_pedido"> | number | null
    personalizacao_id?: IntNullableFilter<"item_pedido"> | number | null
  }

  export type pedidoCreateWithoutClienteInput = {
    data?: Date | string
    valor_total: number
    status: string
    itens_pedido?: item_pedidoCreateNestedManyWithoutPedidoInput
  }

  export type pedidoUncheckedCreateWithoutClienteInput = {
    id_pedido?: number
    data?: Date | string
    valor_total: number
    status: string
    itens_pedido?: item_pedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type pedidoCreateOrConnectWithoutClienteInput = {
    where: pedidoWhereUniqueInput
    create: XOR<pedidoCreateWithoutClienteInput, pedidoUncheckedCreateWithoutClienteInput>
  }

  export type pedidoCreateManyClienteInputEnvelope = {
    data: pedidoCreateManyClienteInput | pedidoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type pedidoUpsertWithWhereUniqueWithoutClienteInput = {
    where: pedidoWhereUniqueInput
    update: XOR<pedidoUpdateWithoutClienteInput, pedidoUncheckedUpdateWithoutClienteInput>
    create: XOR<pedidoCreateWithoutClienteInput, pedidoUncheckedCreateWithoutClienteInput>
  }

  export type pedidoUpdateWithWhereUniqueWithoutClienteInput = {
    where: pedidoWhereUniqueInput
    data: XOR<pedidoUpdateWithoutClienteInput, pedidoUncheckedUpdateWithoutClienteInput>
  }

  export type pedidoUpdateManyWithWhereWithoutClienteInput = {
    where: pedidoScalarWhereInput
    data: XOR<pedidoUpdateManyMutationInput, pedidoUncheckedUpdateManyWithoutClienteInput>
  }

  export type pedidoScalarWhereInput = {
    AND?: pedidoScalarWhereInput | pedidoScalarWhereInput[]
    OR?: pedidoScalarWhereInput[]
    NOT?: pedidoScalarWhereInput | pedidoScalarWhereInput[]
    id_pedido?: IntFilter<"pedido"> | number
    data?: DateTimeFilter<"pedido"> | Date | string
    valor_total?: FloatFilter<"pedido"> | number
    status?: StringFilter<"pedido"> | string
    cliente_id?: IntNullableFilter<"pedido"> | number | null
  }

  export type item_pedidoCreateWithoutImagemInput = {
    quantidade?: number
    preco_total: number
    pedido: pedidoCreateNestedOneWithoutItens_pedidoInput
    produto: produtoCreateNestedOneWithoutItens_pedidoInput
    personalizacao?: personalizacaoCreateNestedOneWithoutItens_pedidoInput
  }

  export type item_pedidoUncheckedCreateWithoutImagemInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    produto_id: number
    personalizacao_id?: number | null
  }

  export type item_pedidoCreateOrConnectWithoutImagemInput = {
    where: item_pedidoWhereUniqueInput
    create: XOR<item_pedidoCreateWithoutImagemInput, item_pedidoUncheckedCreateWithoutImagemInput>
  }

  export type item_pedidoCreateManyImagemInputEnvelope = {
    data: item_pedidoCreateManyImagemInput | item_pedidoCreateManyImagemInput[]
    skipDuplicates?: boolean
  }

  export type item_pedidoUpsertWithWhereUniqueWithoutImagemInput = {
    where: item_pedidoWhereUniqueInput
    update: XOR<item_pedidoUpdateWithoutImagemInput, item_pedidoUncheckedUpdateWithoutImagemInput>
    create: XOR<item_pedidoCreateWithoutImagemInput, item_pedidoUncheckedCreateWithoutImagemInput>
  }

  export type item_pedidoUpdateWithWhereUniqueWithoutImagemInput = {
    where: item_pedidoWhereUniqueInput
    data: XOR<item_pedidoUpdateWithoutImagemInput, item_pedidoUncheckedUpdateWithoutImagemInput>
  }

  export type item_pedidoUpdateManyWithWhereWithoutImagemInput = {
    where: item_pedidoScalarWhereInput
    data: XOR<item_pedidoUpdateManyMutationInput, item_pedidoUncheckedUpdateManyWithoutImagemInput>
  }

  export type clienteCreateWithoutPedidosInput = {
    nome: string
    contato?: string | null
    endereco?: string | null
  }

  export type clienteUncheckedCreateWithoutPedidosInput = {
    id_cliente?: number
    nome: string
    contato?: string | null
    endereco?: string | null
  }

  export type clienteCreateOrConnectWithoutPedidosInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutPedidosInput, clienteUncheckedCreateWithoutPedidosInput>
  }

  export type item_pedidoCreateWithoutPedidoInput = {
    quantidade?: number
    preco_total: number
    produto: produtoCreateNestedOneWithoutItens_pedidoInput
    imagem?: imagemCreateNestedOneWithoutItens_pedidoInput
    personalizacao?: personalizacaoCreateNestedOneWithoutItens_pedidoInput
  }

  export type item_pedidoUncheckedCreateWithoutPedidoInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    produto_id: number
    imagem_id?: number | null
    personalizacao_id?: number | null
  }

  export type item_pedidoCreateOrConnectWithoutPedidoInput = {
    where: item_pedidoWhereUniqueInput
    create: XOR<item_pedidoCreateWithoutPedidoInput, item_pedidoUncheckedCreateWithoutPedidoInput>
  }

  export type item_pedidoCreateManyPedidoInputEnvelope = {
    data: item_pedidoCreateManyPedidoInput | item_pedidoCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type clienteUpsertWithoutPedidosInput = {
    update: XOR<clienteUpdateWithoutPedidosInput, clienteUncheckedUpdateWithoutPedidosInput>
    create: XOR<clienteCreateWithoutPedidosInput, clienteUncheckedCreateWithoutPedidosInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutPedidosInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutPedidosInput, clienteUncheckedUpdateWithoutPedidosInput>
  }

  export type clienteUpdateWithoutPedidosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    contato?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clienteUncheckedUpdateWithoutPedidosInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    contato?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type item_pedidoUpsertWithWhereUniqueWithoutPedidoInput = {
    where: item_pedidoWhereUniqueInput
    update: XOR<item_pedidoUpdateWithoutPedidoInput, item_pedidoUncheckedUpdateWithoutPedidoInput>
    create: XOR<item_pedidoCreateWithoutPedidoInput, item_pedidoUncheckedCreateWithoutPedidoInput>
  }

  export type item_pedidoUpdateWithWhereUniqueWithoutPedidoInput = {
    where: item_pedidoWhereUniqueInput
    data: XOR<item_pedidoUpdateWithoutPedidoInput, item_pedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type item_pedidoUpdateManyWithWhereWithoutPedidoInput = {
    where: item_pedidoScalarWhereInput
    data: XOR<item_pedidoUpdateManyMutationInput, item_pedidoUncheckedUpdateManyWithoutPedidoInput>
  }

  export type item_pedidoCreateWithoutPersonalizacaoInput = {
    quantidade?: number
    preco_total: number
    pedido: pedidoCreateNestedOneWithoutItens_pedidoInput
    produto: produtoCreateNestedOneWithoutItens_pedidoInput
    imagem?: imagemCreateNestedOneWithoutItens_pedidoInput
  }

  export type item_pedidoUncheckedCreateWithoutPersonalizacaoInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    produto_id: number
    imagem_id?: number | null
  }

  export type item_pedidoCreateOrConnectWithoutPersonalizacaoInput = {
    where: item_pedidoWhereUniqueInput
    create: XOR<item_pedidoCreateWithoutPersonalizacaoInput, item_pedidoUncheckedCreateWithoutPersonalizacaoInput>
  }

  export type item_pedidoCreateManyPersonalizacaoInputEnvelope = {
    data: item_pedidoCreateManyPersonalizacaoInput | item_pedidoCreateManyPersonalizacaoInput[]
    skipDuplicates?: boolean
  }

  export type item_pedidoUpsertWithWhereUniqueWithoutPersonalizacaoInput = {
    where: item_pedidoWhereUniqueInput
    update: XOR<item_pedidoUpdateWithoutPersonalizacaoInput, item_pedidoUncheckedUpdateWithoutPersonalizacaoInput>
    create: XOR<item_pedidoCreateWithoutPersonalizacaoInput, item_pedidoUncheckedCreateWithoutPersonalizacaoInput>
  }

  export type item_pedidoUpdateWithWhereUniqueWithoutPersonalizacaoInput = {
    where: item_pedidoWhereUniqueInput
    data: XOR<item_pedidoUpdateWithoutPersonalizacaoInput, item_pedidoUncheckedUpdateWithoutPersonalizacaoInput>
  }

  export type item_pedidoUpdateManyWithWhereWithoutPersonalizacaoInput = {
    where: item_pedidoScalarWhereInput
    data: XOR<item_pedidoUpdateManyMutationInput, item_pedidoUncheckedUpdateManyWithoutPersonalizacaoInput>
  }

  export type pedidoCreateWithoutItens_pedidoInput = {
    data?: Date | string
    valor_total: number
    status: string
    cliente?: clienteCreateNestedOneWithoutPedidosInput
  }

  export type pedidoUncheckedCreateWithoutItens_pedidoInput = {
    id_pedido?: number
    data?: Date | string
    valor_total: number
    status: string
    cliente_id?: number | null
  }

  export type pedidoCreateOrConnectWithoutItens_pedidoInput = {
    where: pedidoWhereUniqueInput
    create: XOR<pedidoCreateWithoutItens_pedidoInput, pedidoUncheckedCreateWithoutItens_pedidoInput>
  }

  export type produtoCreateWithoutItens_pedidoInput = {
    nome: string
    tipo: string
    base_custo: number
    margem_lucro: number
    material_principal: string
  }

  export type produtoUncheckedCreateWithoutItens_pedidoInput = {
    id_produto?: number
    nome: string
    tipo: string
    base_custo: number
    margem_lucro: number
    material_principal: string
  }

  export type produtoCreateOrConnectWithoutItens_pedidoInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutItens_pedidoInput, produtoUncheckedCreateWithoutItens_pedidoInput>
  }

  export type imagemCreateWithoutItens_pedidoInput = {
    origem: string
    custo_adicional: number
  }

  export type imagemUncheckedCreateWithoutItens_pedidoInput = {
    id_imagem?: number
    origem: string
    custo_adicional: number
  }

  export type imagemCreateOrConnectWithoutItens_pedidoInput = {
    where: imagemWhereUniqueInput
    create: XOR<imagemCreateWithoutItens_pedidoInput, imagemUncheckedCreateWithoutItens_pedidoInput>
  }

  export type personalizacaoCreateWithoutItens_pedidoInput = {
    tipo: string
    valor_adicional: number
    detalhes?: string | null
  }

  export type personalizacaoUncheckedCreateWithoutItens_pedidoInput = {
    id_personalizacao?: number
    tipo: string
    valor_adicional: number
    detalhes?: string | null
  }

  export type personalizacaoCreateOrConnectWithoutItens_pedidoInput = {
    where: personalizacaoWhereUniqueInput
    create: XOR<personalizacaoCreateWithoutItens_pedidoInput, personalizacaoUncheckedCreateWithoutItens_pedidoInput>
  }

  export type pedidoUpsertWithoutItens_pedidoInput = {
    update: XOR<pedidoUpdateWithoutItens_pedidoInput, pedidoUncheckedUpdateWithoutItens_pedidoInput>
    create: XOR<pedidoCreateWithoutItens_pedidoInput, pedidoUncheckedCreateWithoutItens_pedidoInput>
    where?: pedidoWhereInput
  }

  export type pedidoUpdateToOneWithWhereWithoutItens_pedidoInput = {
    where?: pedidoWhereInput
    data: XOR<pedidoUpdateWithoutItens_pedidoInput, pedidoUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type pedidoUpdateWithoutItens_pedidoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    cliente?: clienteUpdateOneWithoutPedidosNestedInput
  }

  export type pedidoUncheckedUpdateWithoutItens_pedidoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    cliente_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type produtoUpsertWithoutItens_pedidoInput = {
    update: XOR<produtoUpdateWithoutItens_pedidoInput, produtoUncheckedUpdateWithoutItens_pedidoInput>
    create: XOR<produtoCreateWithoutItens_pedidoInput, produtoUncheckedCreateWithoutItens_pedidoInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutItens_pedidoInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutItens_pedidoInput, produtoUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type produtoUpdateWithoutItens_pedidoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    base_custo?: FloatFieldUpdateOperationsInput | number
    margem_lucro?: FloatFieldUpdateOperationsInput | number
    material_principal?: StringFieldUpdateOperationsInput | string
  }

  export type produtoUncheckedUpdateWithoutItens_pedidoInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    base_custo?: FloatFieldUpdateOperationsInput | number
    margem_lucro?: FloatFieldUpdateOperationsInput | number
    material_principal?: StringFieldUpdateOperationsInput | string
  }

  export type imagemUpsertWithoutItens_pedidoInput = {
    update: XOR<imagemUpdateWithoutItens_pedidoInput, imagemUncheckedUpdateWithoutItens_pedidoInput>
    create: XOR<imagemCreateWithoutItens_pedidoInput, imagemUncheckedCreateWithoutItens_pedidoInput>
    where?: imagemWhereInput
  }

  export type imagemUpdateToOneWithWhereWithoutItens_pedidoInput = {
    where?: imagemWhereInput
    data: XOR<imagemUpdateWithoutItens_pedidoInput, imagemUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type imagemUpdateWithoutItens_pedidoInput = {
    origem?: StringFieldUpdateOperationsInput | string
    custo_adicional?: FloatFieldUpdateOperationsInput | number
  }

  export type imagemUncheckedUpdateWithoutItens_pedidoInput = {
    id_imagem?: IntFieldUpdateOperationsInput | number
    origem?: StringFieldUpdateOperationsInput | string
    custo_adicional?: FloatFieldUpdateOperationsInput | number
  }

  export type personalizacaoUpsertWithoutItens_pedidoInput = {
    update: XOR<personalizacaoUpdateWithoutItens_pedidoInput, personalizacaoUncheckedUpdateWithoutItens_pedidoInput>
    create: XOR<personalizacaoCreateWithoutItens_pedidoInput, personalizacaoUncheckedCreateWithoutItens_pedidoInput>
    where?: personalizacaoWhereInput
  }

  export type personalizacaoUpdateToOneWithWhereWithoutItens_pedidoInput = {
    where?: personalizacaoWhereInput
    data: XOR<personalizacaoUpdateWithoutItens_pedidoInput, personalizacaoUncheckedUpdateWithoutItens_pedidoInput>
  }

  export type personalizacaoUpdateWithoutItens_pedidoInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    valor_adicional?: FloatFieldUpdateOperationsInput | number
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type personalizacaoUncheckedUpdateWithoutItens_pedidoInput = {
    id_personalizacao?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    valor_adicional?: FloatFieldUpdateOperationsInput | number
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type item_pedidoCreateManyProdutoInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    imagem_id?: number | null
    personalizacao_id?: number | null
  }

  export type item_pedidoUpdateWithoutProdutoInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido?: pedidoUpdateOneRequiredWithoutItens_pedidoNestedInput
    imagem?: imagemUpdateOneWithoutItens_pedidoNestedInput
    personalizacao?: personalizacaoUpdateOneWithoutItens_pedidoNestedInput
  }

  export type item_pedidoUncheckedUpdateWithoutProdutoInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoUncheckedUpdateManyWithoutProdutoInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pedidoCreateManyClienteInput = {
    id_pedido?: number
    data?: Date | string
    valor_total: number
    status: string
  }

  export type pedidoUpdateWithoutClienteInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    itens_pedido?: item_pedidoUpdateManyWithoutPedidoNestedInput
  }

  export type pedidoUncheckedUpdateWithoutClienteInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    itens_pedido?: item_pedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type pedidoUncheckedUpdateManyWithoutClienteInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
  }

  export type item_pedidoCreateManyImagemInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    produto_id: number
    personalizacao_id?: number | null
  }

  export type item_pedidoUpdateWithoutImagemInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido?: pedidoUpdateOneRequiredWithoutItens_pedidoNestedInput
    produto?: produtoUpdateOneRequiredWithoutItens_pedidoNestedInput
    personalizacao?: personalizacaoUpdateOneWithoutItens_pedidoNestedInput
  }

  export type item_pedidoUncheckedUpdateWithoutImagemInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoUncheckedUpdateManyWithoutImagemInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoCreateManyPedidoInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    produto_id: number
    imagem_id?: number | null
    personalizacao_id?: number | null
  }

  export type item_pedidoUpdateWithoutPedidoInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    produto?: produtoUpdateOneRequiredWithoutItens_pedidoNestedInput
    imagem?: imagemUpdateOneWithoutItens_pedidoNestedInput
    personalizacao?: personalizacaoUpdateOneWithoutItens_pedidoNestedInput
  }

  export type item_pedidoUncheckedUpdateWithoutPedidoInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoUncheckedUpdateManyWithoutPedidoInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
    personalizacao_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoCreateManyPersonalizacaoInput = {
    id_item?: number
    quantidade?: number
    preco_total: number
    pedido_id: number
    produto_id: number
    imagem_id?: number | null
  }

  export type item_pedidoUpdateWithoutPersonalizacaoInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido?: pedidoUpdateOneRequiredWithoutItens_pedidoNestedInput
    produto?: produtoUpdateOneRequiredWithoutItens_pedidoNestedInput
    imagem?: imagemUpdateOneWithoutItens_pedidoNestedInput
  }

  export type item_pedidoUncheckedUpdateWithoutPersonalizacaoInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type item_pedidoUncheckedUpdateManyWithoutPersonalizacaoInput = {
    id_item?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    preco_total?: FloatFieldUpdateOperationsInput | number
    pedido_id?: IntFieldUpdateOperationsInput | number
    produto_id?: IntFieldUpdateOperationsInput | number
    imagem_id?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ProdutoCountOutputTypeDefaultArgs instead
     */
    export type ProdutoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProdutoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteCountOutputTypeDefaultArgs instead
     */
    export type ClienteCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ImagemCountOutputTypeDefaultArgs instead
     */
    export type ImagemCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ImagemCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PedidoCountOutputTypeDefaultArgs instead
     */
    export type PedidoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PedidoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PersonalizacaoCountOutputTypeDefaultArgs instead
     */
    export type PersonalizacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PersonalizacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use produtoDefaultArgs instead
     */
    export type produtoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = produtoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use clienteDefaultArgs instead
     */
    export type clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = clienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use imagemDefaultArgs instead
     */
    export type imagemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = imagemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use pedidoDefaultArgs instead
     */
    export type pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = pedidoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use personalizacaoDefaultArgs instead
     */
    export type personalizacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = personalizacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use item_pedidoDefaultArgs instead
     */
    export type item_pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = item_pedidoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usuarioDefaultArgs instead
     */
    export type usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usuarioDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}